/*
 * Alexa For Business
 * Alexa for Business has been retired and is no longer supported.
 *
 * The version of the OpenAPI document: 2017-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DeviceDeviceStatusInfo;
import org.openapitools.client.model.DeviceNetworkProfileInfo;
import org.openapitools.client.model.DeviceStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetDeviceResponseDevice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:07:53.324908+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class GetDeviceResponseDevice {
  public static final String SERIALIZED_NAME_DEVICE_ARN = "DeviceArn";
  @SerializedName(SERIALIZED_NAME_DEVICE_ARN)
  @javax.annotation.Nullable
  private String deviceArn;

  public static final String SERIALIZED_NAME_DEVICE_SERIAL_NUMBER = "DeviceSerialNumber";
  @SerializedName(SERIALIZED_NAME_DEVICE_SERIAL_NUMBER)
  @javax.annotation.Nullable
  private String deviceSerialNumber;

  public static final String SERIALIZED_NAME_DEVICE_TYPE = "DeviceType";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE)
  @javax.annotation.Nullable
  private String deviceType;

  public static final String SERIALIZED_NAME_DEVICE_NAME = "DeviceName";
  @SerializedName(SERIALIZED_NAME_DEVICE_NAME)
  @javax.annotation.Nullable
  private String deviceName;

  public static final String SERIALIZED_NAME_SOFTWARE_VERSION = "SoftwareVersion";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_VERSION)
  @javax.annotation.Nullable
  private String softwareVersion;

  public static final String SERIALIZED_NAME_MAC_ADDRESS = "MacAddress";
  @SerializedName(SERIALIZED_NAME_MAC_ADDRESS)
  @javax.annotation.Nullable
  private String macAddress;

  public static final String SERIALIZED_NAME_ROOM_ARN = "RoomArn";
  @SerializedName(SERIALIZED_NAME_ROOM_ARN)
  @javax.annotation.Nullable
  private String roomArn;

  public static final String SERIALIZED_NAME_DEVICE_STATUS = "DeviceStatus";
  @SerializedName(SERIALIZED_NAME_DEVICE_STATUS)
  @javax.annotation.Nullable
  private DeviceStatus deviceStatus;

  public static final String SERIALIZED_NAME_DEVICE_STATUS_INFO = "DeviceStatusInfo";
  @SerializedName(SERIALIZED_NAME_DEVICE_STATUS_INFO)
  @javax.annotation.Nullable
  private DeviceDeviceStatusInfo deviceStatusInfo;

  public static final String SERIALIZED_NAME_NETWORK_PROFILE_INFO = "NetworkProfileInfo";
  @SerializedName(SERIALIZED_NAME_NETWORK_PROFILE_INFO)
  @javax.annotation.Nullable
  private DeviceNetworkProfileInfo networkProfileInfo;

  public GetDeviceResponseDevice() {
  }

  public GetDeviceResponseDevice deviceArn(@javax.annotation.Nullable String deviceArn) {
    this.deviceArn = deviceArn;
    return this;
  }

  /**
   * Get deviceArn
   * @return deviceArn
   */
  @javax.annotation.Nullable
  public String getDeviceArn() {
    return deviceArn;
  }

  public void setDeviceArn(@javax.annotation.Nullable String deviceArn) {
    this.deviceArn = deviceArn;
  }


  public GetDeviceResponseDevice deviceSerialNumber(@javax.annotation.Nullable String deviceSerialNumber) {
    this.deviceSerialNumber = deviceSerialNumber;
    return this;
  }

  /**
   * Get deviceSerialNumber
   * @return deviceSerialNumber
   */
  @javax.annotation.Nullable
  public String getDeviceSerialNumber() {
    return deviceSerialNumber;
  }

  public void setDeviceSerialNumber(@javax.annotation.Nullable String deviceSerialNumber) {
    this.deviceSerialNumber = deviceSerialNumber;
  }


  public GetDeviceResponseDevice deviceType(@javax.annotation.Nullable String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

  /**
   * Get deviceType
   * @return deviceType
   */
  @javax.annotation.Nullable
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(@javax.annotation.Nullable String deviceType) {
    this.deviceType = deviceType;
  }


  public GetDeviceResponseDevice deviceName(@javax.annotation.Nullable String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

  /**
   * Get deviceName
   * @return deviceName
   */
  @javax.annotation.Nullable
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(@javax.annotation.Nullable String deviceName) {
    this.deviceName = deviceName;
  }


  public GetDeviceResponseDevice softwareVersion(@javax.annotation.Nullable String softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

  /**
   * Get softwareVersion
   * @return softwareVersion
   */
  @javax.annotation.Nullable
  public String getSoftwareVersion() {
    return softwareVersion;
  }

  public void setSoftwareVersion(@javax.annotation.Nullable String softwareVersion) {
    this.softwareVersion = softwareVersion;
  }


  public GetDeviceResponseDevice macAddress(@javax.annotation.Nullable String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

  /**
   * Get macAddress
   * @return macAddress
   */
  @javax.annotation.Nullable
  public String getMacAddress() {
    return macAddress;
  }

  public void setMacAddress(@javax.annotation.Nullable String macAddress) {
    this.macAddress = macAddress;
  }


  public GetDeviceResponseDevice roomArn(@javax.annotation.Nullable String roomArn) {
    this.roomArn = roomArn;
    return this;
  }

  /**
   * Get roomArn
   * @return roomArn
   */
  @javax.annotation.Nullable
  public String getRoomArn() {
    return roomArn;
  }

  public void setRoomArn(@javax.annotation.Nullable String roomArn) {
    this.roomArn = roomArn;
  }


  public GetDeviceResponseDevice deviceStatus(@javax.annotation.Nullable DeviceStatus deviceStatus) {
    this.deviceStatus = deviceStatus;
    return this;
  }

  /**
   * Get deviceStatus
   * @return deviceStatus
   */
  @javax.annotation.Nullable
  public DeviceStatus getDeviceStatus() {
    return deviceStatus;
  }

  public void setDeviceStatus(@javax.annotation.Nullable DeviceStatus deviceStatus) {
    this.deviceStatus = deviceStatus;
  }


  public GetDeviceResponseDevice deviceStatusInfo(@javax.annotation.Nullable DeviceDeviceStatusInfo deviceStatusInfo) {
    this.deviceStatusInfo = deviceStatusInfo;
    return this;
  }

  /**
   * Get deviceStatusInfo
   * @return deviceStatusInfo
   */
  @javax.annotation.Nullable
  public DeviceDeviceStatusInfo getDeviceStatusInfo() {
    return deviceStatusInfo;
  }

  public void setDeviceStatusInfo(@javax.annotation.Nullable DeviceDeviceStatusInfo deviceStatusInfo) {
    this.deviceStatusInfo = deviceStatusInfo;
  }


  public GetDeviceResponseDevice networkProfileInfo(@javax.annotation.Nullable DeviceNetworkProfileInfo networkProfileInfo) {
    this.networkProfileInfo = networkProfileInfo;
    return this;
  }

  /**
   * Get networkProfileInfo
   * @return networkProfileInfo
   */
  @javax.annotation.Nullable
  public DeviceNetworkProfileInfo getNetworkProfileInfo() {
    return networkProfileInfo;
  }

  public void setNetworkProfileInfo(@javax.annotation.Nullable DeviceNetworkProfileInfo networkProfileInfo) {
    this.networkProfileInfo = networkProfileInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDeviceResponseDevice getDeviceResponseDevice = (GetDeviceResponseDevice) o;
    return Objects.equals(this.deviceArn, getDeviceResponseDevice.deviceArn) &&
        Objects.equals(this.deviceSerialNumber, getDeviceResponseDevice.deviceSerialNumber) &&
        Objects.equals(this.deviceType, getDeviceResponseDevice.deviceType) &&
        Objects.equals(this.deviceName, getDeviceResponseDevice.deviceName) &&
        Objects.equals(this.softwareVersion, getDeviceResponseDevice.softwareVersion) &&
        Objects.equals(this.macAddress, getDeviceResponseDevice.macAddress) &&
        Objects.equals(this.roomArn, getDeviceResponseDevice.roomArn) &&
        Objects.equals(this.deviceStatus, getDeviceResponseDevice.deviceStatus) &&
        Objects.equals(this.deviceStatusInfo, getDeviceResponseDevice.deviceStatusInfo) &&
        Objects.equals(this.networkProfileInfo, getDeviceResponseDevice.networkProfileInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceArn, deviceSerialNumber, deviceType, deviceName, softwareVersion, macAddress, roomArn, deviceStatus, deviceStatusInfo, networkProfileInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDeviceResponseDevice {\n");
    sb.append("    deviceArn: ").append(toIndentedString(deviceArn)).append("\n");
    sb.append("    deviceSerialNumber: ").append(toIndentedString(deviceSerialNumber)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    roomArn: ").append(toIndentedString(roomArn)).append("\n");
    sb.append("    deviceStatus: ").append(toIndentedString(deviceStatus)).append("\n");
    sb.append("    deviceStatusInfo: ").append(toIndentedString(deviceStatusInfo)).append("\n");
    sb.append("    networkProfileInfo: ").append(toIndentedString(networkProfileInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DeviceArn");
    openapiFields.add("DeviceSerialNumber");
    openapiFields.add("DeviceType");
    openapiFields.add("DeviceName");
    openapiFields.add("SoftwareVersion");
    openapiFields.add("MacAddress");
    openapiFields.add("RoomArn");
    openapiFields.add("DeviceStatus");
    openapiFields.add("DeviceStatusInfo");
    openapiFields.add("NetworkProfileInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetDeviceResponseDevice
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDeviceResponseDevice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDeviceResponseDevice is not found in the empty JSON string", GetDeviceResponseDevice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDeviceResponseDevice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDeviceResponseDevice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DeviceArn`
      if (jsonObj.get("DeviceArn") != null && !jsonObj.get("DeviceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeviceArn"));
      }
      // validate the optional field `DeviceSerialNumber`
      if (jsonObj.get("DeviceSerialNumber") != null && !jsonObj.get("DeviceSerialNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeviceSerialNumber"));
      }
      // validate the optional field `DeviceType`
      if (jsonObj.get("DeviceType") != null && !jsonObj.get("DeviceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeviceType"));
      }
      // validate the optional field `DeviceName`
      if (jsonObj.get("DeviceName") != null && !jsonObj.get("DeviceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeviceName"));
      }
      // validate the optional field `SoftwareVersion`
      if (jsonObj.get("SoftwareVersion") != null && !jsonObj.get("SoftwareVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SoftwareVersion"));
      }
      // validate the optional field `MacAddress`
      if (jsonObj.get("MacAddress") != null && !jsonObj.get("MacAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MacAddress"));
      }
      // validate the optional field `RoomArn`
      if (jsonObj.get("RoomArn") != null && !jsonObj.get("RoomArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoomArn"));
      }
      // validate the optional field `DeviceStatus`
      if (jsonObj.get("DeviceStatus") != null && !jsonObj.get("DeviceStatus").isJsonNull()) {
        DeviceStatus.validateJsonElement(jsonObj.get("DeviceStatus"));
      }
      // validate the optional field `DeviceStatusInfo`
      if (jsonObj.get("DeviceStatusInfo") != null && !jsonObj.get("DeviceStatusInfo").isJsonNull()) {
        DeviceDeviceStatusInfo.validateJsonElement(jsonObj.get("DeviceStatusInfo"));
      }
      // validate the optional field `NetworkProfileInfo`
      if (jsonObj.get("NetworkProfileInfo") != null && !jsonObj.get("NetworkProfileInfo").isJsonNull()) {
        DeviceNetworkProfileInfo.validateJsonElement(jsonObj.get("NetworkProfileInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDeviceResponseDevice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDeviceResponseDevice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDeviceResponseDevice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDeviceResponseDevice.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDeviceResponseDevice>() {
           @Override
           public void write(JsonWriter out, GetDeviceResponseDevice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDeviceResponseDevice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetDeviceResponseDevice given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetDeviceResponseDevice
   * @throws IOException if the JSON string is invalid with respect to GetDeviceResponseDevice
   */
  public static GetDeviceResponseDevice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDeviceResponseDevice.class);
  }

  /**
   * Convert an instance of GetDeviceResponseDevice to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

