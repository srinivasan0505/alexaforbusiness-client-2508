/*
 * Alexa For Business
 * Alexa for Business has been retired and is no longer supported.
 *
 * The version of the OpenAPI document: 2017-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.SkillDetailsDeveloperInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SkillsStoreSkillSkillDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:07:53.324908+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class SkillsStoreSkillSkillDetails {
  public static final String SERIALIZED_NAME_PRODUCT_DESCRIPTION = "ProductDescription";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DESCRIPTION)
  @javax.annotation.Nullable
  private String productDescription;

  public static final String SERIALIZED_NAME_INVOCATION_PHRASE = "InvocationPhrase";
  @SerializedName(SERIALIZED_NAME_INVOCATION_PHRASE)
  @javax.annotation.Nullable
  private String invocationPhrase;

  public static final String SERIALIZED_NAME_RELEASE_DATE = "ReleaseDate";
  @SerializedName(SERIALIZED_NAME_RELEASE_DATE)
  @javax.annotation.Nullable
  private String releaseDate;

  public static final String SERIALIZED_NAME_END_USER_LICENSE_AGREEMENT = "EndUserLicenseAgreement";
  @SerializedName(SERIALIZED_NAME_END_USER_LICENSE_AGREEMENT)
  @javax.annotation.Nullable
  private String endUserLicenseAgreement;

  public static final String SERIALIZED_NAME_GENERIC_KEYWORDS = "GenericKeywords";
  @SerializedName(SERIALIZED_NAME_GENERIC_KEYWORDS)
  @javax.annotation.Nullable
  private List genericKeywords;

  public static final String SERIALIZED_NAME_BULLET_POINTS = "BulletPoints";
  @SerializedName(SERIALIZED_NAME_BULLET_POINTS)
  @javax.annotation.Nullable
  private List bulletPoints;

  public static final String SERIALIZED_NAME_NEW_IN_THIS_VERSION_BULLET_POINTS = "NewInThisVersionBulletPoints";
  @SerializedName(SERIALIZED_NAME_NEW_IN_THIS_VERSION_BULLET_POINTS)
  @javax.annotation.Nullable
  private List newInThisVersionBulletPoints;

  public static final String SERIALIZED_NAME_SKILL_TYPES = "SkillTypes";
  @SerializedName(SERIALIZED_NAME_SKILL_TYPES)
  @javax.annotation.Nullable
  private List skillTypes;

  public static final String SERIALIZED_NAME_REVIEWS = "Reviews";
  @SerializedName(SERIALIZED_NAME_REVIEWS)
  @javax.annotation.Nullable
  private Map reviews;

  public static final String SERIALIZED_NAME_DEVELOPER_INFO = "DeveloperInfo";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_INFO)
  @javax.annotation.Nullable
  private SkillDetailsDeveloperInfo developerInfo;

  public SkillsStoreSkillSkillDetails() {
  }

  public SkillsStoreSkillSkillDetails productDescription(@javax.annotation.Nullable String productDescription) {
    this.productDescription = productDescription;
    return this;
  }

  /**
   * Get productDescription
   * @return productDescription
   */
  @javax.annotation.Nullable
  public String getProductDescription() {
    return productDescription;
  }

  public void setProductDescription(@javax.annotation.Nullable String productDescription) {
    this.productDescription = productDescription;
  }


  public SkillsStoreSkillSkillDetails invocationPhrase(@javax.annotation.Nullable String invocationPhrase) {
    this.invocationPhrase = invocationPhrase;
    return this;
  }

  /**
   * Get invocationPhrase
   * @return invocationPhrase
   */
  @javax.annotation.Nullable
  public String getInvocationPhrase() {
    return invocationPhrase;
  }

  public void setInvocationPhrase(@javax.annotation.Nullable String invocationPhrase) {
    this.invocationPhrase = invocationPhrase;
  }


  public SkillsStoreSkillSkillDetails releaseDate(@javax.annotation.Nullable String releaseDate) {
    this.releaseDate = releaseDate;
    return this;
  }

  /**
   * Get releaseDate
   * @return releaseDate
   */
  @javax.annotation.Nullable
  public String getReleaseDate() {
    return releaseDate;
  }

  public void setReleaseDate(@javax.annotation.Nullable String releaseDate) {
    this.releaseDate = releaseDate;
  }


  public SkillsStoreSkillSkillDetails endUserLicenseAgreement(@javax.annotation.Nullable String endUserLicenseAgreement) {
    this.endUserLicenseAgreement = endUserLicenseAgreement;
    return this;
  }

  /**
   * Get endUserLicenseAgreement
   * @return endUserLicenseAgreement
   */
  @javax.annotation.Nullable
  public String getEndUserLicenseAgreement() {
    return endUserLicenseAgreement;
  }

  public void setEndUserLicenseAgreement(@javax.annotation.Nullable String endUserLicenseAgreement) {
    this.endUserLicenseAgreement = endUserLicenseAgreement;
  }


  public SkillsStoreSkillSkillDetails genericKeywords(@javax.annotation.Nullable List genericKeywords) {
    this.genericKeywords = genericKeywords;
    return this;
  }

  /**
   * Get genericKeywords
   * @return genericKeywords
   */
  @javax.annotation.Nullable
  public List getGenericKeywords() {
    return genericKeywords;
  }

  public void setGenericKeywords(@javax.annotation.Nullable List genericKeywords) {
    this.genericKeywords = genericKeywords;
  }


  public SkillsStoreSkillSkillDetails bulletPoints(@javax.annotation.Nullable List bulletPoints) {
    this.bulletPoints = bulletPoints;
    return this;
  }

  /**
   * Get bulletPoints
   * @return bulletPoints
   */
  @javax.annotation.Nullable
  public List getBulletPoints() {
    return bulletPoints;
  }

  public void setBulletPoints(@javax.annotation.Nullable List bulletPoints) {
    this.bulletPoints = bulletPoints;
  }


  public SkillsStoreSkillSkillDetails newInThisVersionBulletPoints(@javax.annotation.Nullable List newInThisVersionBulletPoints) {
    this.newInThisVersionBulletPoints = newInThisVersionBulletPoints;
    return this;
  }

  /**
   * Get newInThisVersionBulletPoints
   * @return newInThisVersionBulletPoints
   */
  @javax.annotation.Nullable
  public List getNewInThisVersionBulletPoints() {
    return newInThisVersionBulletPoints;
  }

  public void setNewInThisVersionBulletPoints(@javax.annotation.Nullable List newInThisVersionBulletPoints) {
    this.newInThisVersionBulletPoints = newInThisVersionBulletPoints;
  }


  public SkillsStoreSkillSkillDetails skillTypes(@javax.annotation.Nullable List skillTypes) {
    this.skillTypes = skillTypes;
    return this;
  }

  /**
   * Get skillTypes
   * @return skillTypes
   */
  @javax.annotation.Nullable
  public List getSkillTypes() {
    return skillTypes;
  }

  public void setSkillTypes(@javax.annotation.Nullable List skillTypes) {
    this.skillTypes = skillTypes;
  }


  public SkillsStoreSkillSkillDetails reviews(@javax.annotation.Nullable Map reviews) {
    this.reviews = reviews;
    return this;
  }

  /**
   * Get reviews
   * @return reviews
   */
  @javax.annotation.Nullable
  public Map getReviews() {
    return reviews;
  }

  public void setReviews(@javax.annotation.Nullable Map reviews) {
    this.reviews = reviews;
  }


  public SkillsStoreSkillSkillDetails developerInfo(@javax.annotation.Nullable SkillDetailsDeveloperInfo developerInfo) {
    this.developerInfo = developerInfo;
    return this;
  }

  /**
   * Get developerInfo
   * @return developerInfo
   */
  @javax.annotation.Nullable
  public SkillDetailsDeveloperInfo getDeveloperInfo() {
    return developerInfo;
  }

  public void setDeveloperInfo(@javax.annotation.Nullable SkillDetailsDeveloperInfo developerInfo) {
    this.developerInfo = developerInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkillsStoreSkillSkillDetails skillsStoreSkillSkillDetails = (SkillsStoreSkillSkillDetails) o;
    return Objects.equals(this.productDescription, skillsStoreSkillSkillDetails.productDescription) &&
        Objects.equals(this.invocationPhrase, skillsStoreSkillSkillDetails.invocationPhrase) &&
        Objects.equals(this.releaseDate, skillsStoreSkillSkillDetails.releaseDate) &&
        Objects.equals(this.endUserLicenseAgreement, skillsStoreSkillSkillDetails.endUserLicenseAgreement) &&
        Objects.equals(this.genericKeywords, skillsStoreSkillSkillDetails.genericKeywords) &&
        Objects.equals(this.bulletPoints, skillsStoreSkillSkillDetails.bulletPoints) &&
        Objects.equals(this.newInThisVersionBulletPoints, skillsStoreSkillSkillDetails.newInThisVersionBulletPoints) &&
        Objects.equals(this.skillTypes, skillsStoreSkillSkillDetails.skillTypes) &&
        Objects.equals(this.reviews, skillsStoreSkillSkillDetails.reviews) &&
        Objects.equals(this.developerInfo, skillsStoreSkillSkillDetails.developerInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productDescription, invocationPhrase, releaseDate, endUserLicenseAgreement, genericKeywords, bulletPoints, newInThisVersionBulletPoints, skillTypes, reviews, developerInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkillsStoreSkillSkillDetails {\n");
    sb.append("    productDescription: ").append(toIndentedString(productDescription)).append("\n");
    sb.append("    invocationPhrase: ").append(toIndentedString(invocationPhrase)).append("\n");
    sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
    sb.append("    endUserLicenseAgreement: ").append(toIndentedString(endUserLicenseAgreement)).append("\n");
    sb.append("    genericKeywords: ").append(toIndentedString(genericKeywords)).append("\n");
    sb.append("    bulletPoints: ").append(toIndentedString(bulletPoints)).append("\n");
    sb.append("    newInThisVersionBulletPoints: ").append(toIndentedString(newInThisVersionBulletPoints)).append("\n");
    sb.append("    skillTypes: ").append(toIndentedString(skillTypes)).append("\n");
    sb.append("    reviews: ").append(toIndentedString(reviews)).append("\n");
    sb.append("    developerInfo: ").append(toIndentedString(developerInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ProductDescription");
    openapiFields.add("InvocationPhrase");
    openapiFields.add("ReleaseDate");
    openapiFields.add("EndUserLicenseAgreement");
    openapiFields.add("GenericKeywords");
    openapiFields.add("BulletPoints");
    openapiFields.add("NewInThisVersionBulletPoints");
    openapiFields.add("SkillTypes");
    openapiFields.add("Reviews");
    openapiFields.add("DeveloperInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SkillsStoreSkillSkillDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SkillsStoreSkillSkillDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SkillsStoreSkillSkillDetails is not found in the empty JSON string", SkillsStoreSkillSkillDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SkillsStoreSkillSkillDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SkillsStoreSkillSkillDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ProductDescription`
      if (jsonObj.get("ProductDescription") != null && !jsonObj.get("ProductDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProductDescription"));
      }
      // validate the optional field `InvocationPhrase`
      if (jsonObj.get("InvocationPhrase") != null && !jsonObj.get("InvocationPhrase").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InvocationPhrase"));
      }
      // validate the optional field `ReleaseDate`
      if (jsonObj.get("ReleaseDate") != null && !jsonObj.get("ReleaseDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReleaseDate"));
      }
      // validate the optional field `EndUserLicenseAgreement`
      if (jsonObj.get("EndUserLicenseAgreement") != null && !jsonObj.get("EndUserLicenseAgreement").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndUserLicenseAgreement"));
      }
      // validate the optional field `GenericKeywords`
      if (jsonObj.get("GenericKeywords") != null && !jsonObj.get("GenericKeywords").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("GenericKeywords"));
      }
      // validate the optional field `BulletPoints`
      if (jsonObj.get("BulletPoints") != null && !jsonObj.get("BulletPoints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BulletPoints"));
      }
      // validate the optional field `NewInThisVersionBulletPoints`
      if (jsonObj.get("NewInThisVersionBulletPoints") != null && !jsonObj.get("NewInThisVersionBulletPoints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NewInThisVersionBulletPoints"));
      }
      // validate the optional field `SkillTypes`
      if (jsonObj.get("SkillTypes") != null && !jsonObj.get("SkillTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SkillTypes"));
      }
      // validate the optional field `Reviews`
      if (jsonObj.get("Reviews") != null && !jsonObj.get("Reviews").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Reviews"));
      }
      // validate the optional field `DeveloperInfo`
      if (jsonObj.get("DeveloperInfo") != null && !jsonObj.get("DeveloperInfo").isJsonNull()) {
        SkillDetailsDeveloperInfo.validateJsonElement(jsonObj.get("DeveloperInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SkillsStoreSkillSkillDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SkillsStoreSkillSkillDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SkillsStoreSkillSkillDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SkillsStoreSkillSkillDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<SkillsStoreSkillSkillDetails>() {
           @Override
           public void write(JsonWriter out, SkillsStoreSkillSkillDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SkillsStoreSkillSkillDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SkillsStoreSkillSkillDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SkillsStoreSkillSkillDetails
   * @throws IOException if the JSON string is invalid with respect to SkillsStoreSkillSkillDetails
   */
  public static SkillsStoreSkillSkillDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SkillsStoreSkillSkillDetails.class);
  }

  /**
   * Convert an instance of SkillsStoreSkillSkillDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

