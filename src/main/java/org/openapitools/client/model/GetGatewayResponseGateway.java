/*
 * Alexa For Business
 * Alexa for Business has been retired and is no longer supported.
 *
 * The version of the OpenAPI document: 2017-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetGatewayResponseGateway
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:07:53.324908+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class GetGatewayResponseGateway {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  @javax.annotation.Nullable
  private String arn;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_GATEWAY_GROUP_ARN = "GatewayGroupArn";
  @SerializedName(SERIALIZED_NAME_GATEWAY_GROUP_ARN)
  @javax.annotation.Nullable
  private String gatewayGroupArn;

  public static final String SERIALIZED_NAME_SOFTWARE_VERSION = "SoftwareVersion";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_VERSION)
  @javax.annotation.Nullable
  private String softwareVersion;

  public GetGatewayResponseGateway() {
  }

  public GetGatewayResponseGateway arn(@javax.annotation.Nullable String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(@javax.annotation.Nullable String arn) {
    this.arn = arn;
  }


  public GetGatewayResponseGateway name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public GetGatewayResponseGateway description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public GetGatewayResponseGateway gatewayGroupArn(@javax.annotation.Nullable String gatewayGroupArn) {
    this.gatewayGroupArn = gatewayGroupArn;
    return this;
  }

  /**
   * Get gatewayGroupArn
   * @return gatewayGroupArn
   */
  @javax.annotation.Nullable
  public String getGatewayGroupArn() {
    return gatewayGroupArn;
  }

  public void setGatewayGroupArn(@javax.annotation.Nullable String gatewayGroupArn) {
    this.gatewayGroupArn = gatewayGroupArn;
  }


  public GetGatewayResponseGateway softwareVersion(@javax.annotation.Nullable String softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

  /**
   * Get softwareVersion
   * @return softwareVersion
   */
  @javax.annotation.Nullable
  public String getSoftwareVersion() {
    return softwareVersion;
  }

  public void setSoftwareVersion(@javax.annotation.Nullable String softwareVersion) {
    this.softwareVersion = softwareVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetGatewayResponseGateway getGatewayResponseGateway = (GetGatewayResponseGateway) o;
    return Objects.equals(this.arn, getGatewayResponseGateway.arn) &&
        Objects.equals(this.name, getGatewayResponseGateway.name) &&
        Objects.equals(this.description, getGatewayResponseGateway.description) &&
        Objects.equals(this.gatewayGroupArn, getGatewayResponseGateway.gatewayGroupArn) &&
        Objects.equals(this.softwareVersion, getGatewayResponseGateway.softwareVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, name, description, gatewayGroupArn, softwareVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetGatewayResponseGateway {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gatewayGroupArn: ").append(toIndentedString(gatewayGroupArn)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Arn");
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("GatewayGroupArn");
    openapiFields.add("SoftwareVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetGatewayResponseGateway
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetGatewayResponseGateway.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetGatewayResponseGateway is not found in the empty JSON string", GetGatewayResponseGateway.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetGatewayResponseGateway.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetGatewayResponseGateway` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `GatewayGroupArn`
      if (jsonObj.get("GatewayGroupArn") != null && !jsonObj.get("GatewayGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GatewayGroupArn"));
      }
      // validate the optional field `SoftwareVersion`
      if (jsonObj.get("SoftwareVersion") != null && !jsonObj.get("SoftwareVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SoftwareVersion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetGatewayResponseGateway.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetGatewayResponseGateway' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetGatewayResponseGateway> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetGatewayResponseGateway.class));

       return (TypeAdapter<T>) new TypeAdapter<GetGatewayResponseGateway>() {
           @Override
           public void write(JsonWriter out, GetGatewayResponseGateway value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetGatewayResponseGateway read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetGatewayResponseGateway given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetGatewayResponseGateway
   * @throws IOException if the JSON string is invalid with respect to GetGatewayResponseGateway
   */
  public static GetGatewayResponseGateway fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetGatewayResponseGateway.class);
  }

  /**
   * Convert an instance of GetGatewayResponseGateway to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

