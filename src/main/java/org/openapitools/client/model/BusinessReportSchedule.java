/*
 * Alexa For Business
 * Alexa for Business has been retired and is no longer supported.
 *
 * The version of the OpenAPI document: 2017-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BusinessReportFormat;
import org.openapitools.client.model.BusinessReportScheduleLastBusinessReport;
import org.openapitools.client.model.CreateBusinessReportScheduleRequestContentRange;
import org.openapitools.client.model.UpdateBusinessReportScheduleRequestRecurrence;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The schedule of the usage report.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:07:53.324908+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class BusinessReportSchedule {
  public static final String SERIALIZED_NAME_SCHEDULE_ARN = "ScheduleArn";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_ARN)
  @javax.annotation.Nullable
  private String scheduleArn;

  public static final String SERIALIZED_NAME_SCHEDULE_NAME = "ScheduleName";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_NAME)
  @javax.annotation.Nullable
  private String scheduleName;

  public static final String SERIALIZED_NAME_S3_BUCKET_NAME = "S3BucketName";
  @SerializedName(SERIALIZED_NAME_S3_BUCKET_NAME)
  @javax.annotation.Nullable
  private String s3BucketName;

  public static final String SERIALIZED_NAME_S3_KEY_PREFIX = "S3KeyPrefix";
  @SerializedName(SERIALIZED_NAME_S3_KEY_PREFIX)
  @javax.annotation.Nullable
  private String s3KeyPrefix;

  public static final String SERIALIZED_NAME_FORMAT = "Format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  @javax.annotation.Nullable
  private BusinessReportFormat format;

  public static final String SERIALIZED_NAME_CONTENT_RANGE = "ContentRange";
  @SerializedName(SERIALIZED_NAME_CONTENT_RANGE)
  @javax.annotation.Nullable
  private CreateBusinessReportScheduleRequestContentRange contentRange;

  public static final String SERIALIZED_NAME_RECURRENCE = "Recurrence";
  @SerializedName(SERIALIZED_NAME_RECURRENCE)
  @javax.annotation.Nullable
  private UpdateBusinessReportScheduleRequestRecurrence recurrence;

  public static final String SERIALIZED_NAME_LAST_BUSINESS_REPORT = "LastBusinessReport";
  @SerializedName(SERIALIZED_NAME_LAST_BUSINESS_REPORT)
  @javax.annotation.Nullable
  private BusinessReportScheduleLastBusinessReport lastBusinessReport;

  public BusinessReportSchedule() {
  }

  public BusinessReportSchedule scheduleArn(@javax.annotation.Nullable String scheduleArn) {
    this.scheduleArn = scheduleArn;
    return this;
  }

  /**
   * Get scheduleArn
   * @return scheduleArn
   */
  @javax.annotation.Nullable
  public String getScheduleArn() {
    return scheduleArn;
  }

  public void setScheduleArn(@javax.annotation.Nullable String scheduleArn) {
    this.scheduleArn = scheduleArn;
  }


  public BusinessReportSchedule scheduleName(@javax.annotation.Nullable String scheduleName) {
    this.scheduleName = scheduleName;
    return this;
  }

  /**
   * Get scheduleName
   * @return scheduleName
   */
  @javax.annotation.Nullable
  public String getScheduleName() {
    return scheduleName;
  }

  public void setScheduleName(@javax.annotation.Nullable String scheduleName) {
    this.scheduleName = scheduleName;
  }


  public BusinessReportSchedule s3BucketName(@javax.annotation.Nullable String s3BucketName) {
    this.s3BucketName = s3BucketName;
    return this;
  }

  /**
   * Get s3BucketName
   * @return s3BucketName
   */
  @javax.annotation.Nullable
  public String getS3BucketName() {
    return s3BucketName;
  }

  public void setS3BucketName(@javax.annotation.Nullable String s3BucketName) {
    this.s3BucketName = s3BucketName;
  }


  public BusinessReportSchedule s3KeyPrefix(@javax.annotation.Nullable String s3KeyPrefix) {
    this.s3KeyPrefix = s3KeyPrefix;
    return this;
  }

  /**
   * Get s3KeyPrefix
   * @return s3KeyPrefix
   */
  @javax.annotation.Nullable
  public String getS3KeyPrefix() {
    return s3KeyPrefix;
  }

  public void setS3KeyPrefix(@javax.annotation.Nullable String s3KeyPrefix) {
    this.s3KeyPrefix = s3KeyPrefix;
  }


  public BusinessReportSchedule format(@javax.annotation.Nullable BusinessReportFormat format) {
    this.format = format;
    return this;
  }

  /**
   * Get format
   * @return format
   */
  @javax.annotation.Nullable
  public BusinessReportFormat getFormat() {
    return format;
  }

  public void setFormat(@javax.annotation.Nullable BusinessReportFormat format) {
    this.format = format;
  }


  public BusinessReportSchedule contentRange(@javax.annotation.Nullable CreateBusinessReportScheduleRequestContentRange contentRange) {
    this.contentRange = contentRange;
    return this;
  }

  /**
   * Get contentRange
   * @return contentRange
   */
  @javax.annotation.Nullable
  public CreateBusinessReportScheduleRequestContentRange getContentRange() {
    return contentRange;
  }

  public void setContentRange(@javax.annotation.Nullable CreateBusinessReportScheduleRequestContentRange contentRange) {
    this.contentRange = contentRange;
  }


  public BusinessReportSchedule recurrence(@javax.annotation.Nullable UpdateBusinessReportScheduleRequestRecurrence recurrence) {
    this.recurrence = recurrence;
    return this;
  }

  /**
   * Get recurrence
   * @return recurrence
   */
  @javax.annotation.Nullable
  public UpdateBusinessReportScheduleRequestRecurrence getRecurrence() {
    return recurrence;
  }

  public void setRecurrence(@javax.annotation.Nullable UpdateBusinessReportScheduleRequestRecurrence recurrence) {
    this.recurrence = recurrence;
  }


  public BusinessReportSchedule lastBusinessReport(@javax.annotation.Nullable BusinessReportScheduleLastBusinessReport lastBusinessReport) {
    this.lastBusinessReport = lastBusinessReport;
    return this;
  }

  /**
   * Get lastBusinessReport
   * @return lastBusinessReport
   */
  @javax.annotation.Nullable
  public BusinessReportScheduleLastBusinessReport getLastBusinessReport() {
    return lastBusinessReport;
  }

  public void setLastBusinessReport(@javax.annotation.Nullable BusinessReportScheduleLastBusinessReport lastBusinessReport) {
    this.lastBusinessReport = lastBusinessReport;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessReportSchedule businessReportSchedule = (BusinessReportSchedule) o;
    return Objects.equals(this.scheduleArn, businessReportSchedule.scheduleArn) &&
        Objects.equals(this.scheduleName, businessReportSchedule.scheduleName) &&
        Objects.equals(this.s3BucketName, businessReportSchedule.s3BucketName) &&
        Objects.equals(this.s3KeyPrefix, businessReportSchedule.s3KeyPrefix) &&
        Objects.equals(this.format, businessReportSchedule.format) &&
        Objects.equals(this.contentRange, businessReportSchedule.contentRange) &&
        Objects.equals(this.recurrence, businessReportSchedule.recurrence) &&
        Objects.equals(this.lastBusinessReport, businessReportSchedule.lastBusinessReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduleArn, scheduleName, s3BucketName, s3KeyPrefix, format, contentRange, recurrence, lastBusinessReport);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessReportSchedule {\n");
    sb.append("    scheduleArn: ").append(toIndentedString(scheduleArn)).append("\n");
    sb.append("    scheduleName: ").append(toIndentedString(scheduleName)).append("\n");
    sb.append("    s3BucketName: ").append(toIndentedString(s3BucketName)).append("\n");
    sb.append("    s3KeyPrefix: ").append(toIndentedString(s3KeyPrefix)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    contentRange: ").append(toIndentedString(contentRange)).append("\n");
    sb.append("    recurrence: ").append(toIndentedString(recurrence)).append("\n");
    sb.append("    lastBusinessReport: ").append(toIndentedString(lastBusinessReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ScheduleArn");
    openapiFields.add("ScheduleName");
    openapiFields.add("S3BucketName");
    openapiFields.add("S3KeyPrefix");
    openapiFields.add("Format");
    openapiFields.add("ContentRange");
    openapiFields.add("Recurrence");
    openapiFields.add("LastBusinessReport");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BusinessReportSchedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BusinessReportSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BusinessReportSchedule is not found in the empty JSON string", BusinessReportSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BusinessReportSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BusinessReportSchedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ScheduleArn`
      if (jsonObj.get("ScheduleArn") != null && !jsonObj.get("ScheduleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScheduleArn"));
      }
      // validate the optional field `ScheduleName`
      if (jsonObj.get("ScheduleName") != null && !jsonObj.get("ScheduleName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScheduleName"));
      }
      // validate the optional field `S3BucketName`
      if (jsonObj.get("S3BucketName") != null && !jsonObj.get("S3BucketName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3BucketName"));
      }
      // validate the optional field `S3KeyPrefix`
      if (jsonObj.get("S3KeyPrefix") != null && !jsonObj.get("S3KeyPrefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3KeyPrefix"));
      }
      // validate the optional field `Format`
      if (jsonObj.get("Format") != null && !jsonObj.get("Format").isJsonNull()) {
        BusinessReportFormat.validateJsonElement(jsonObj.get("Format"));
      }
      // validate the optional field `ContentRange`
      if (jsonObj.get("ContentRange") != null && !jsonObj.get("ContentRange").isJsonNull()) {
        CreateBusinessReportScheduleRequestContentRange.validateJsonElement(jsonObj.get("ContentRange"));
      }
      // validate the optional field `Recurrence`
      if (jsonObj.get("Recurrence") != null && !jsonObj.get("Recurrence").isJsonNull()) {
        UpdateBusinessReportScheduleRequestRecurrence.validateJsonElement(jsonObj.get("Recurrence"));
      }
      // validate the optional field `LastBusinessReport`
      if (jsonObj.get("LastBusinessReport") != null && !jsonObj.get("LastBusinessReport").isJsonNull()) {
        BusinessReportScheduleLastBusinessReport.validateJsonElement(jsonObj.get("LastBusinessReport"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BusinessReportSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BusinessReportSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BusinessReportSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BusinessReportSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<BusinessReportSchedule>() {
           @Override
           public void write(JsonWriter out, BusinessReportSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BusinessReportSchedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BusinessReportSchedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BusinessReportSchedule
   * @throws IOException if the JSON string is invalid with respect to BusinessReportSchedule
   */
  public static BusinessReportSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BusinessReportSchedule.class);
  }

  /**
   * Convert an instance of BusinessReportSchedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

