openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Alexa for Business has been retired and is no longer supported.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Alexa For Business
  version: 2017-11-09
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: alexaforbusiness
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/alexaforbusiness-2017-11-09.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/a4b/
servers:
- description: The Alexa For Business multi-region endpoint
  url: "http://a4b.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Alexa For Business multi-region endpoint
  url: "https://a4b.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Alexa For Business endpoint for China (Beijing) and China (Ningxia)
  url: "http://a4b.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Alexa For Business endpoint for China (Beijing) and China (Ningxia)
  url: "https://a4b.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AlexaForBusiness.ApproveSkill:
    post:
      deprecated: true
      description: "Associates a skill with the organization under the customer's\
        \ AWS account. If a skill is private, the user implicitly accepts access to\
        \ this skill during enablement."
      operationId: ApproveSkill
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ApproveSkill
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveSkillRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveSkillResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.AssociateContactWithAddressBook:
    post:
      deprecated: true
      description: Associates a contact with a given address book.
      operationId: AssociateContactWithAddressBook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.AssociateContactWithAddressBook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateContactWithAddressBookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateContactWithAddressBookResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.AssociateDeviceWithNetworkProfile:
    post:
      deprecated: true
      description: Associates a device with the specified network profile.
      operationId: AssociateDeviceWithNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.AssociateDeviceWithNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateDeviceWithNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateDeviceWithNetworkProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotRegisteredException'
          description: DeviceNotRegisteredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.AssociateDeviceWithRoom:
    post:
      deprecated: true
      description: "Associates a device with a given room. This applies all the settings\
        \ from the room profile to the device, and all the skills in any skill groups\
        \ added to that room. This operation requires the device to be online, or\
        \ else a manual sync is required. "
      operationId: AssociateDeviceWithRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.AssociateDeviceWithRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateDeviceWithRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateDeviceWithRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotRegisteredException'
          description: DeviceNotRegisteredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillGroupWithRoom:
    post:
      deprecated: true
      description: Associates a skill group with a given room. This enables all skills
        in the associated skill group on all devices in the room.
      operationId: AssociateSkillGroupWithRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.AssociateSkillGroupWithRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateSkillGroupWithRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSkillGroupWithRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillWithSkillGroup:
    post:
      deprecated: true
      description: Associates a skill with a skill group.
      operationId: AssociateSkillWithSkillGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.AssociateSkillWithSkillGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateSkillWithSkillGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSkillWithSkillGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillNotLinkedException'
          description: SkillNotLinkedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillWithUsers:
    post:
      deprecated: true
      description: Makes a private skill available for enrolled users to enable on
        their devices.
      operationId: AssociateSkillWithUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.AssociateSkillWithUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateSkillWithUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSkillWithUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateAddressBook:
    post:
      deprecated: true
      description: Creates an address book with the specified details.
      operationId: CreateAddressBook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateAddressBook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressBookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAddressBookResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateBusinessReportSchedule:
    post:
      deprecated: true
      description: Creates a recurring schedule for usage reports to deliver to the
        specified S3 location with a specified daily or weekly interval.
      operationId: CreateBusinessReportSchedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateBusinessReportSchedule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBusinessReportScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBusinessReportScheduleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateConferenceProvider:
    post:
      deprecated: true
      description: Adds a new conference provider under the user's AWS account.
      operationId: CreateConferenceProvider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateConferenceProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConferenceProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConferenceProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateContact:
    post:
      deprecated: true
      description: Creates a contact with the specified details.
      operationId: CreateContact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateContact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateGatewayGroup:
    post:
      deprecated: true
      description: Creates a gateway group with the specified details.
      operationId: CreateGatewayGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateGatewayGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGatewayGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGatewayGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateNetworkProfile:
    post:
      deprecated: true
      description: Creates a network profile with the specified details.
      operationId: CreateNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCertificateAuthorityException'
          description: InvalidCertificateAuthorityException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidServiceLinkedRoleStateException'
          description: InvalidServiceLinkedRoleStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateProfile:
    post:
      deprecated: true
      description: Creates a new room profile with the specified details.
      operationId: CreateProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateRoom:
    post:
      deprecated: true
      description: Creates a room with the specified details.
      operationId: CreateRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateSkillGroup:
    post:
      deprecated: true
      description: Creates a skill group with a specified name and description.
      operationId: CreateSkillGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateSkillGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSkillGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSkillGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.CreateUser:
    post:
      deprecated: true
      description: Creates a user.
      operationId: CreateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.CreateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteAddressBook:
    post:
      deprecated: true
      description: Deletes an address book by the address book ARN.
      operationId: DeleteAddressBook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteAddressBook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAddressBookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAddressBookResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteBusinessReportSchedule:
    post:
      deprecated: true
      description: Deletes the recurring report delivery schedule with the specified
        schedule ARN.
      operationId: DeleteBusinessReportSchedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteBusinessReportSchedule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBusinessReportScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBusinessReportScheduleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteConferenceProvider:
    post:
      deprecated: true
      description: Deletes a conference provider.
      operationId: DeleteConferenceProvider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteConferenceProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConferenceProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConferenceProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteContact:
    post:
      deprecated: true
      description: Deletes a contact by the contact ARN.
      operationId: DeleteContact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteContact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteContactRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteDevice:
    post:
      deprecated: true
      description: Removes a device from Alexa For Business.
      operationId: DeleteDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCertificateAuthorityException'
          description: InvalidCertificateAuthorityException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteDeviceUsageData:
    post:
      deprecated: true
      description: "When this action is called for a specified shared device, it allows\
        \ authorized users to delete the device's entire previous history of voice\
        \ input data and associated response data. This action can be called once\
        \ every 24 hours for a specific shared device."
      operationId: DeleteDeviceUsageData
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteDeviceUsageData
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDeviceUsageDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeviceUsageDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotRegisteredException'
          description: DeviceNotRegisteredException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteGatewayGroup:
    post:
      deprecated: true
      description: Deletes a gateway group.
      operationId: DeleteGatewayGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteGatewayGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGatewayGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGatewayGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAssociatedException'
          description: ResourceAssociatedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteNetworkProfile:
    post:
      deprecated: true
      description: Deletes a network profile by the network profile ARN.
      operationId: DeleteNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteProfile:
    post:
      deprecated: true
      description: Deletes a room profile by the profile ARN.
      operationId: DeleteProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteRoom:
    post:
      deprecated: true
      description: Deletes a room by the room ARN.
      operationId: DeleteRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteRoomSkillParameter:
    post:
      deprecated: true
      description: "Deletes room skill parameter details by room, skill, and parameter\
        \ key ID."
      operationId: DeleteRoomSkillParameter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteRoomSkillParameter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRoomSkillParameterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoomSkillParameterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteSkillAuthorization:
    post:
      deprecated: true
      description: Unlinks a third-party account from a skill.
      operationId: DeleteSkillAuthorization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteSkillAuthorization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSkillAuthorizationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSkillAuthorizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteSkillGroup:
    post:
      deprecated: true
      description: Deletes a skill group by skill group ARN.
      operationId: DeleteSkillGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteSkillGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSkillGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSkillGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DeleteUser:
    post:
      deprecated: true
      description: Deletes a specified user by user ARN and enrollment ARN.
      operationId: DeleteUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DeleteUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DisassociateContactFromAddressBook:
    post:
      deprecated: true
      description: Disassociates a contact from a given address book.
      operationId: DisassociateContactFromAddressBook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DisassociateContactFromAddressBook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateContactFromAddressBookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateContactFromAddressBookResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DisassociateDeviceFromRoom:
    post:
      deprecated: true
      description: Disassociates a device from its current room. The device continues
        to be connected to the Wi-Fi network and is still registered to the account.
        The device settings and skills are removed from the room.
      operationId: DisassociateDeviceFromRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DisassociateDeviceFromRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateDeviceFromRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateDeviceFromRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotRegisteredException'
          description: DeviceNotRegisteredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillFromSkillGroup:
    post:
      deprecated: true
      description: Disassociates a skill from a skill group.
      operationId: DisassociateSkillFromSkillGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DisassociateSkillFromSkillGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateSkillFromSkillGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateSkillFromSkillGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillFromUsers:
    post:
      deprecated: true
      description: Makes a private skill unavailable for enrolled users and prevents
        them from enabling it on their devices.
      operationId: DisassociateSkillFromUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DisassociateSkillFromUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateSkillFromUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateSkillFromUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillGroupFromRoom:
    post:
      deprecated: true
      description: Disassociates a skill group from a specified room. This disables
        all skills in the skill group on all devices in the room.
      operationId: DisassociateSkillGroupFromRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.DisassociateSkillGroupFromRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateSkillGroupFromRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateSkillGroupFromRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ForgetSmartHomeAppliances:
    post:
      deprecated: true
      description: Forgets smart home appliances associated to a room.
      operationId: ForgetSmartHomeAppliances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ForgetSmartHomeAppliances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgetSmartHomeAppliancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgetSmartHomeAppliancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetAddressBook:
    post:
      deprecated: true
      description: Gets address the book details by the address book ARN.
      operationId: GetAddressBook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetAddressBook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAddressBookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressBookResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetConferencePreference:
    post:
      deprecated: true
      description: Retrieves the existing conference preferences.
      operationId: GetConferencePreference
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetConferencePreference
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConferencePreferenceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConferencePreferenceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetConferenceProvider:
    post:
      deprecated: true
      description: Gets details about a specific conference provider.
      operationId: GetConferenceProvider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetConferenceProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConferenceProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConferenceProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetContact:
    post:
      deprecated: true
      description: Gets the contact details by the contact ARN.
      operationId: GetContact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetContact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetContactRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetDevice:
    post:
      deprecated: true
      description: Gets the details of a device by device ARN.
      operationId: GetDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetGateway:
    post:
      deprecated: true
      description: Retrieves the details of a gateway.
      operationId: GetGateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetGateway
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGatewayRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetGatewayGroup:
    post:
      deprecated: true
      description: Retrieves the details of a gateway group.
      operationId: GetGatewayGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetGatewayGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGatewayGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGatewayGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetInvitationConfiguration:
    post:
      deprecated: true
      description: Retrieves the configured values for the user enrollment invitation
        email template.
      operationId: GetInvitationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetInvitationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInvitationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvitationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetNetworkProfile:
    post:
      deprecated: true
      description: Gets the network profile details by the network profile ARN.
      operationId: GetNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSecretsManagerResourceException'
          description: InvalidSecretsManagerResourceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetProfile:
    post:
      deprecated: true
      description: Gets the details of a room profile by profile ARN.
      operationId: GetProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetRoom:
    post:
      deprecated: true
      description: Gets room details by room ARN.
      operationId: GetRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetRoomSkillParameter:
    post:
      deprecated: true
      description: "Gets room skill parameter details by room, skill, and parameter\
        \ key ARN."
      operationId: GetRoomSkillParameter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetRoomSkillParameter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRoomSkillParameterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoomSkillParameterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.GetSkillGroup:
    post:
      deprecated: true
      description: Gets skill group details by skill group ARN.
      operationId: GetSkillGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.GetSkillGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSkillGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkillGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListBusinessReportSchedules:
    post:
      deprecated: true
      description: "Lists the details of the schedules that a user configured. A download\
        \ URL of the report associated with each schedule is returned every time this\
        \ action is called. A new download URL is returned each time, and is valid\
        \ for 24 hours."
      operationId: ListBusinessReportSchedules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListBusinessReportSchedules
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBusinessReportSchedulesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBusinessReportSchedulesResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListConferenceProviders:
    post:
      deprecated: true
      description: Lists conference providers under a specific AWS account.
      operationId: ListConferenceProviders
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListConferenceProviders
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConferenceProvidersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConferenceProvidersResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListDeviceEvents:
    post:
      deprecated: true
      description: "Lists the device event history, including device connection status,\
        \ for up to 30 days."
      operationId: ListDeviceEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListDeviceEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeviceEventsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListGatewayGroups:
    post:
      deprecated: true
      description: Retrieves a list of gateway group summaries. Use GetGatewayGroup
        to retrieve details of a specific gateway group.
      operationId: ListGatewayGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListGatewayGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGatewayGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewayGroupsResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListGateways:
    post:
      deprecated: true
      description: Retrieves a list of gateway summaries. Use GetGateway to retrieve
        details of a specific gateway. An optional gateway group ARN can be provided
        to only retrieve gateway summaries of gateways that are associated with that
        gateway group ARN.
      operationId: ListGateways
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListGateways
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGatewaysRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGatewaysResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListSkills:
    post:
      deprecated: true
      description: Lists all enabled skills in a specific skill group.
      operationId: ListSkills
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListSkills
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSkillsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSkillsResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListSkillsStoreCategories:
    post:
      deprecated: true
      description: Lists all categories in the Alexa skill store.
      operationId: ListSkillsStoreCategories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListSkillsStoreCategories
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSkillsStoreCategoriesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSkillsStoreCategoriesResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListSkillsStoreSkillsByCategory:
    post:
      deprecated: true
      description: Lists all skills in the Alexa skill store by category.
      operationId: ListSkillsStoreSkillsByCategory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListSkillsStoreSkillsByCategory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSkillsStoreSkillsByCategoryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSkillsStoreSkillsByCategoryResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListSmartHomeAppliances:
    post:
      deprecated: true
      description: Lists all of the smart home appliances associated with a room.
      operationId: ListSmartHomeAppliances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListSmartHomeAppliances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSmartHomeAppliancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSmartHomeAppliancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ListTags:
    post:
      deprecated: true
      description: Lists all tags for the specified resource.
      operationId: ListTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ListTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.PutConferencePreference:
    post:
      deprecated: true
      description: Sets the conference preferences on a specific conference provider
        at the account level.
      operationId: PutConferencePreference
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.PutConferencePreference
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConferencePreferenceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConferencePreferenceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.PutInvitationConfiguration:
    post:
      deprecated: true
      description: Configures the email template for the user enrollment invitation
        with the specified attributes.
      operationId: PutInvitationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.PutInvitationConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInvitationConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInvitationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.PutRoomSkillParameter:
    post:
      deprecated: true
      description: "Updates room skill parameter details by room, skill, and parameter\
        \ key ID. Not all skills have a room skill parameter."
      operationId: PutRoomSkillParameter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.PutRoomSkillParameter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRoomSkillParameterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRoomSkillParameterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.PutSkillAuthorization:
    post:
      deprecated: true
      description: "Links a user's account to a third-party skill provider. If this\
        \ API operation is called by an assumed IAM role, the skill being linked must\
        \ be a private skill. Also, the skill must be owned by the AWS account that\
        \ assumed the IAM role."
      operationId: PutSkillAuthorization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.PutSkillAuthorization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkillAuthorizationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSkillAuthorizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.RegisterAVSDevice:
    post:
      deprecated: true
      description: Registers an Alexa-enabled device built by an Original Equipment
        Manufacturer (OEM) using Alexa Voice Service (AVS).
      operationId: RegisterAVSDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.RegisterAVSDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAVSDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterAVSDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDeviceException'
          description: InvalidDeviceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.RejectSkill:
    post:
      deprecated: true
      description: "Disassociates a skill from the organization under a user's AWS\
        \ account. If the skill is a private skill, it moves to an AcceptStatus of\
        \ PENDING. Any private or public skill that is rejected can be added later\
        \ by calling the ApproveSkill API. "
      operationId: RejectSkill
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.RejectSkill
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectSkillRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectSkillResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.ResolveRoom:
    post:
      deprecated: true
      description: "<p>Determines the details for the room from which a skill request\
        \ was invoked. This operation is used by skill developers.</p> <p>To query\
        \ ResolveRoom from an Alexa skill, the skill ID needs to be authorized. When\
        \ the skill is using an AWS Lambda function, the skill is automatically authorized\
        \ when you publish your skill as a private skill to your AWS account. Skills\
        \ that are hosted using a custom web service must be manually authorized.\
        \ To get your skill authorized, contact AWS Support with your AWS account\
        \ ID that queries the ResolveRoom API and skill ID. </p>"
      operationId: ResolveRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.ResolveRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.RevokeInvitation:
    post:
      deprecated: true
      description: Revokes an invitation and invalidates the enrollment URL.
      operationId: RevokeInvitation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.RevokeInvitation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeInvitationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeInvitationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchAddressBooks:
    post:
      deprecated: true
      description: Searches address books and lists the ones that meet a set of filter
        and sort criteria.
      operationId: SearchAddressBooks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchAddressBooks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAddressBooksRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAddressBooksResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchContacts:
    post:
      deprecated: true
      description: Searches contacts and lists the ones that meet a set of filter
        and sort criteria.
      operationId: SearchContacts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchContacts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchContactsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchContactsResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchDevices:
    post:
      deprecated: true
      description: Searches devices and lists the ones that meet a set of filter criteria.
      operationId: SearchDevices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchDevices
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDevicesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDevicesResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchNetworkProfiles:
    post:
      deprecated: true
      description: Searches network profiles and lists the ones that meet a set of
        filter and sort criteria.
      operationId: SearchNetworkProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchNetworkProfiles
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchNetworkProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNetworkProfilesResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchProfiles:
    post:
      deprecated: true
      description: Searches room profiles and lists the ones that meet a set of filter
        criteria.
      operationId: SearchProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchProfiles
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProfilesResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchRooms:
    post:
      deprecated: true
      description: Searches rooms and lists the ones that meet a set of filter and
        sort criteria.
      operationId: SearchRooms
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchRooms
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRoomsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRoomsResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchSkillGroups:
    post:
      deprecated: true
      description: Searches skill groups and lists the ones that meet a set of filter
        and sort criteria.
      operationId: SearchSkillGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchSkillGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSkillGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSkillGroupsResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SearchUsers:
    post:
      deprecated: true
      description: Searches users and lists the ones that meet a set of filter and
        sort criteria.
      operationId: SearchUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SearchUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchUsersResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SendAnnouncement:
    post:
      description: "Triggers an asynchronous flow to send text, SSML, or audio announcements\
        \ to rooms that are identified by a search or filter. "
      operationId: SendAnnouncement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SendAnnouncement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAnnouncementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAnnouncementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.SendInvitation:
    post:
      deprecated: true
      description: "Sends an enrollment invitation email with a URL to a user. The\
        \ URL is valid for 30 days or until you call this operation again, whichever\
        \ comes first. "
      operationId: SendInvitation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.SendInvitation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendInvitationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendInvitationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserStatusException'
          description: InvalidUserStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.StartDeviceSync:
    post:
      deprecated: true
      description: "<p>Resets a device and its account to the known default settings.\
        \ This clears all information and settings set by previous users in the following\
        \ ways:</p> <ul> <li> <p>Bluetooth - This unpairs all bluetooth devices paired\
        \ with your echo device.</p> </li> <li> <p>Volume - This resets the echo device's\
        \ volume to the default value.</p> </li> <li> <p>Notifications - This clears\
        \ all notifications from your echo device.</p> </li> <li> <p>Lists - This\
        \ clears all to-do items from your echo device.</p> </li> <li> <p>Settings\
        \ - This internally syncs the room's profile (if the device is assigned to\
        \ a room), contacts, address books, delegation access for account linking,\
        \ and communications (if enabled on the room profile).</p> </li> </ul>"
      operationId: StartDeviceSync
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.StartDeviceSync
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDeviceSyncRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDeviceSyncResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotRegisteredException'
          description: DeviceNotRegisteredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.StartSmartHomeApplianceDiscovery:
    post:
      deprecated: true
      description: Initiates the discovery of any smart home appliances associated
        with the room.
      operationId: StartSmartHomeApplianceDiscovery
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.StartSmartHomeApplianceDiscovery
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSmartHomeApplianceDiscoveryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSmartHomeApplianceDiscoveryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.TagResource:
    post:
      deprecated: true
      description: Adds metadata tags to a specified resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UntagResource:
    post:
      deprecated: true
      description: Removes metadata tags from a specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateAddressBook:
    post:
      deprecated: true
      description: Updates address book details by the address book ARN.
      operationId: UpdateAddressBook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateAddressBook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddressBookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAddressBookResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameInUseException'
          description: NameInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateBusinessReportSchedule:
    post:
      deprecated: true
      description: Updates the configuration of the report delivery schedule with
        the specified schedule ARN.
      operationId: UpdateBusinessReportSchedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateBusinessReportSchedule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessReportScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBusinessReportScheduleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateConferenceProvider:
    post:
      deprecated: true
      description: Updates an existing conference provider's settings.
      operationId: UpdateConferenceProvider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateConferenceProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConferenceProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConferenceProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateContact:
    post:
      deprecated: true
      description: Updates the contact details by the contact ARN.
      operationId: UpdateContact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateContact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateDevice:
    post:
      deprecated: true
      description: Updates the device name by device ARN.
      operationId: UpdateDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNotRegisteredException'
          description: DeviceNotRegisteredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateGateway:
    post:
      deprecated: true
      description: "Updates the details of a gateway. If any optional field is not\
        \ provided, the existing corresponding value is left unmodified."
      operationId: UpdateGateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateGateway
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGatewayRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameInUseException'
          description: NameInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateGatewayGroup:
    post:
      deprecated: true
      description: "Updates the details of a gateway group. If any optional field\
        \ is not provided, the existing corresponding value is left unmodified."
      operationId: UpdateGatewayGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateGatewayGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGatewayGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGatewayGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameInUseException'
          description: NameInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateNetworkProfile:
    post:
      deprecated: true
      description: Updates a network profile by the network profile ARN.
      operationId: UpdateNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNetworkProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameInUseException'
          description: NameInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCertificateAuthorityException'
          description: InvalidCertificateAuthorityException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSecretsManagerResourceException'
          description: InvalidSecretsManagerResourceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateProfile:
    post:
      deprecated: true
      description: Updates an existing room profile by room profile ARN.
      operationId: UpdateProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameInUseException'
          description: NameInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateRoom:
    post:
      deprecated: true
      description: Updates room details by room ARN.
      operationId: UpdateRoom
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateRoom
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRoomResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameInUseException'
          description: NameInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AlexaForBusiness.UpdateSkillGroup:
    post:
      deprecated: true
      description: Updates skill group details by skill group ARN.
      operationId: UpdateSkillGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AlexaForBusiness.UpdateSkillGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSkillGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSkillGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameInUseException'
          description: NameInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ApproveSkillResponse:
      properties: {}
      type: object
    ApproveSkillRequest:
      example:
        SkillId: ""
      properties:
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The unique identifier of the skill.
      required:
      - SkillId
      title: ApproveSkillRequest
      type: object
    LimitExceededException: {}
    NotFoundException: {}
    ConcurrentModificationException: {}
    AssociateContactWithAddressBookResponse:
      properties: {}
      type: object
    AssociateContactWithAddressBookRequest:
      example:
        ContactArn: ""
        AddressBookArn: ""
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the contact to associate with an address book.
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the address book with which to associate the contact.
      required:
      - AddressBookArn
      - ContactArn
      title: AssociateContactWithAddressBookRequest
      type: object
    AssociateDeviceWithNetworkProfileResponse:
      properties: {}
      type: object
    AssociateDeviceWithNetworkProfileRequest:
      example:
        DeviceArn: ""
        NetworkProfileArn: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The device ARN.
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile to associate with a device.
      required:
      - DeviceArn
      - NetworkProfileArn
      title: AssociateDeviceWithNetworkProfileRequest
      type: object
    DeviceNotRegisteredException: {}
    AssociateDeviceWithRoomResponse:
      properties: {}
      type: object
    AssociateDeviceWithRoomRequest:
      example:
        DeviceArn: ""
        RoomArn: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device to associate to a room. Required.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room with which to associate the device. Required.
      title: AssociateDeviceWithRoomRequest
      type: object
    AssociateSkillGroupWithRoomResponse:
      properties: {}
      type: object
    AssociateSkillGroupWithRoomRequest:
      example:
        SkillGroupArn: ""
        RoomArn: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the skill group to associate with a room. Required.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room with which to associate the skill group.
              Required.
      title: AssociateSkillGroupWithRoomRequest
      type: object
    AssociateSkillWithSkillGroupResponse:
      properties: {}
      type: object
    AssociateSkillWithSkillGroupRequest:
      example:
        SkillGroupArn: ""
        SkillId: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the skill group to associate the skill to. Required.
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The unique identifier of the skill.
      required:
      - SkillId
      title: AssociateSkillWithSkillGroupRequest
      type: object
    SkillNotLinkedException: {}
    AssociateSkillWithUsersResponse:
      properties: {}
      type: object
    AssociateSkillWithUsersRequest:
      example:
        SkillId: ""
      properties:
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The private skill ID you want to make available to enrolled
              users.
      required:
      - SkillId
      title: AssociateSkillWithUsersRequest
      type: object
    CreateAddressBookResponse:
      example:
        AddressBookArn: ""
      properties:
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created address book.
      type: object
    CreateAddressBookRequest:
      example:
        ClientRequestToken: ""
        Description: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AddressBookName'
          - description: The name of the address book.
        Description:
          allOf:
          - $ref: '#/components/schemas/AddressBookDescription'
          - description: The description of the address book.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "A unique, user-specified identifier for the request that\
              \ ensures idempotency."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be added to the specified resource. Do not provide
              system tags.
      required:
      - Name
      title: CreateAddressBookRequest
      type: object
    AlreadyExistsException: {}
    CreateBusinessReportScheduleResponse:
      example:
        ScheduleArn: ""
      properties:
        ScheduleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the business report schedule.
      type: object
    CreateBusinessReportScheduleRequest:
      example:
        Recurrence:
          StartDate: ""
        ClientRequestToken: ""
        Format: ""
        ContentRange:
          Interval: ""
        S3KeyPrefix: ""
        S3BucketName: ""
        Tags: ""
        ScheduleName: ""
      properties:
        ScheduleName:
          allOf:
          - $ref: '#/components/schemas/BusinessReportScheduleName'
          - description: The name identifier of the schedule.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/CustomerS3BucketName'
          - description: "The S3 bucket name of the output reports. If this isn't\
              \ specified, the report can be retrieved from a download link by calling\
              \ ListBusinessReportSchedule. "
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: The S3 key where the report is delivered.
        Format:
          allOf:
          - $ref: '#/components/schemas/BusinessReportFormat'
          - description: The format of the generated report (individual CSV files
              or zipped files of individual files).
        ContentRange:
          $ref: '#/components/schemas/CreateBusinessReportScheduleRequest_ContentRange'
        Recurrence:
          $ref: '#/components/schemas/CreateBusinessReportScheduleRequest_Recurrence'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The client request token.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the business report schedule.
      required:
      - ContentRange
      - Format
      title: CreateBusinessReportScheduleRequest
      type: object
    CreateConferenceProviderResponse:
      example:
        ConferenceProviderArn: ""
      properties:
        ConferenceProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly-created conference provider.
      type: object
    CreateConferenceProviderRequest:
      example:
        ClientRequestToken: ""
        ConferenceProviderName: ""
        MeetingSetting:
          RequirePin: ""
        ConferenceProviderType: ""
        PSTNDialIn:
          OneClickPinDelay: ""
          PhoneNumber: ""
          CountryCode: ""
          OneClickIdDelay: ""
        IPDialIn:
          Endpoint: ""
          CommsProtocol: ""
        Tags: ""
      properties:
        ConferenceProviderName:
          allOf:
          - $ref: '#/components/schemas/ConferenceProviderName'
          - description: The name of the conference provider.
        ConferenceProviderType:
          allOf:
          - $ref: '#/components/schemas/ConferenceProviderType'
          - description: Represents a type within a list of predefined types.
        IPDialIn:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_IPDialIn'
        PSTNDialIn:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_PSTNDialIn'
        MeetingSetting:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_MeetingSetting'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The request token of the client.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be added to the specified resource. Do not provide
              system tags.
      required:
      - ConferenceProviderName
      - ConferenceProviderType
      - MeetingSetting
      title: CreateConferenceProviderRequest
      type: object
    CreateContactResponse:
      example:
        ContactArn: ""
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created address book.
      type: object
    CreateContactRequest:
      example:
        PhoneNumbers: ""
        ClientRequestToken: ""
        SipAddresses: ""
        FirstName: ""
        DisplayName: ""
        PhoneNumber: ""
        LastName: ""
        Tags: ""
      properties:
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The name of the contact to display on the console.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The first name of the contact that is used to call the contact
              on the device.
        LastName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The last name of the contact that is used to call the contact
              on the device.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/RawPhoneNumber'
          - description: "The phone number of the contact in E.164 format. The phone\
              \ number type defaults to WORK. You can specify PhoneNumber or PhoneNumbers.\
              \ We recommend that you use PhoneNumbers, which lets you specify the\
              \ phone number type and multiple numbers."
        PhoneNumbers:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberList'
          - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
          - $ref: '#/components/schemas/SipAddressList'
          - description: The list of SIP addresses for the contact.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "A unique, user-specified identifier for this request that\
              \ ensures idempotency."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be added to the specified resource. Do not provide
              system tags.
      required:
      - FirstName
      title: CreateContactRequest
      type: object
    CreateGatewayGroupResponse:
      example:
        GatewayGroupArn: ""
      properties:
        GatewayGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the created gateway group.
      type: object
    CreateGatewayGroupRequest:
      example:
        ClientRequestToken: ""
        Description: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupName'
          - description: The name of the gateway group.
        Description:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupDescription'
          - description: The description of the gateway group.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: " A unique, user-specified identifier for the request that\
              \ ensures idempotency."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be added to the specified resource. Do not provide
              system tags.
      required:
      - ClientRequestToken
      - Name
      title: CreateGatewayGroupRequest
      type: object
    CreateNetworkProfileResponse:
      example:
        NetworkProfileArn: ""
      properties:
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
      type: object
    CreateNetworkProfileRequest:
      example:
        NextPassword: ""
        TrustAnchors: ""
        CertificateAuthorityArn: ""
        ClientRequestToken: ClientRequestToken
        SecurityType: ""
        Description: ""
        NetworkProfileName: ""
        CurrentPassword: ""
        Ssid: ""
        EapMethod: ""
        Tags: ""
      properties:
        NetworkProfileName:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileName'
          - description: The name of the network profile associated with a device.
        Description:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileDescription'
          - description: Detailed information about a device's network profile.
        Ssid:
          allOf:
          - $ref: '#/components/schemas/NetworkSsid'
          - description: The SSID of the Wi-Fi network.
        SecurityType:
          allOf:
          - $ref: '#/components/schemas/NetworkSecurityType'
          - description: "The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE,\
              \ WPA2_PSK, WPA_PSK, WEP, or OPEN."
        EapMethod:
          allOf:
          - $ref: '#/components/schemas/NetworkEapMethod'
          - description: "The authentication standard that is used in the EAP framework.\
              \ Currently, EAP_TLS is supported."
        CurrentPassword:
          allOf:
          - $ref: '#/components/schemas/CurrentWiFiPassword'
          - description: The current password of the Wi-Fi network.
        NextPassword:
          allOf:
          - $ref: '#/components/schemas/NextWiFiPassword'
          - description: "The next, or subsequent, password of the Wi-Fi network.\
              \ This password is asynchronously transmitted to the device and is used\
              \ when the password of the network changes to NextPassword. "
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the Private Certificate Authority (PCA) created
              in AWS Certificate Manager (ACM). This is used to issue certificates
              to the devices. '
        TrustAnchors:
          allOf:
          - $ref: '#/components/schemas/TrustAnchorList'
          - description: 'The root certificates of your authentication server that
              is installed on your devices and used to trust your authentication server
              during EAP negotiation. '
        ClientRequestToken:
          description: "A unique, user-specified identifier for the request that ensures\
            \ idempotency."
          maxLength: 150
          minLength: 10
          pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'The tags to be added to the specified resource. Do not provide
              system tags. '
      required:
      - ClientRequestToken
      - NetworkProfileName
      - SecurityType
      - Ssid
      title: CreateNetworkProfileRequest
      type: object
    InvalidCertificateAuthorityException: {}
    InvalidServiceLinkedRoleStateException: {}
    CreateProfileResponse:
      example:
        ProfileArn: ""
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created room profile in the response.
      type: object
    CreateProfileRequest:
      example:
        Timezone: ""
        Locale: ""
        Address: ""
        TemperatureUnit: ""
        ProfileName: ""
        MaxVolumeLimit: ""
        ClientRequestToken: ""
        MeetingRoomConfiguration:
          RoomUtilizationMetricsEnabled: ""
          InstantBooking:
            DurationInMinutes: ""
            Enabled: ""
          RequireCheckIn:
            Enabled: ""
            ReleaseAfterMinutes: ""
          ProactiveJoin:
            EnabledByMotion: true
          EndOfMeetingReminder:
            Enabled: ""
            ReminderType: ""
            ReminderAtMinutes: ""
        DataRetentionOptIn: ""
        SetupModeDisabled: ""
        PSTNEnabled: ""
        DistanceUnit: ""
        Tags: ""
        WakeWord: ""
      properties:
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of a room profile.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: The time zone used by a room profile.
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          - description: The valid address for the room.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          - description: The distance unit to be used by devices in the profile.
        TemperatureUnit:
          allOf:
          - $ref: '#/components/schemas/TemperatureUnit'
          - description: The temperature unit to be used by devices in the profile.
        WakeWord:
          allOf:
          - $ref: '#/components/schemas/WakeWord'
          - description: "A wake word for Alexa, Echo, Amazon, or a computer."
        Locale:
          allOf:
          - $ref: '#/components/schemas/DeviceLocale'
          - description: The locale of the room profile. (This is currently only available
              to a limited preview audience.)
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The user-specified token that is used during the creation
              of a profile.
        SetupModeDisabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether room profile setup is enabled.
        MaxVolumeLimit:
          allOf:
          - $ref: '#/components/schemas/MaxVolumeLimit'
          - description: The maximum volume limit for a room profile.
        PSTNEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether PSTN calling is enabled.
        DataRetentionOptIn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether data retention of the profile is enabled.
        MeetingRoomConfiguration:
          $ref: '#/components/schemas/CreateProfileRequest_MeetingRoomConfiguration'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the profile.
      required:
      - Address
      - DistanceUnit
      - ProfileName
      - TemperatureUnit
      - Timezone
      - WakeWord
      title: CreateProfileRequest
      type: object
    CreateRoomResponse:
      example:
        RoomArn: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created room in the response.
      type: object
    CreateRoomRequest:
      example:
        ClientRequestToken: ""
        Description: ""
        RoomName: ""
        ProviderCalendarId: ""
        ProfileArn: ""
        Tags: ""
      properties:
        RoomName:
          allOf:
          - $ref: '#/components/schemas/RoomName'
          - description: The name for the room.
        Description:
          allOf:
          - $ref: '#/components/schemas/RoomDescription'
          - description: The description for the room.
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The profile ARN for the room. This is required.
        ProviderCalendarId:
          allOf:
          - $ref: '#/components/schemas/ProviderCalendarId'
          - description: The calendar ARN for the room.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "A unique, user-specified identifier for this request that\
              \ ensures idempotency. "
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the room.
      required:
      - RoomName
      title: CreateRoomRequest
      type: object
    CreateSkillGroupResponse:
      example:
        SkillGroupArn: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created skill group in the response.
      type: object
    CreateSkillGroupRequest:
      example:
        ClientRequestToken: ""
        SkillGroupName: ""
        Description: ""
        Tags: ""
      properties:
        SkillGroupName:
          allOf:
          - $ref: '#/components/schemas/SkillGroupName'
          - description: The name for the skill group.
        Description:
          allOf:
          - $ref: '#/components/schemas/SkillGroupDescription'
          - description: The description for the skill group.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "A unique, user-specified identifier for this request that\
              \ ensures idempotency. "
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the skill group.
      required:
      - SkillGroupName
      title: CreateSkillGroupRequest
      type: object
    CreateUserResponse:
      example:
        UserArn: ""
      properties:
        UserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created user in the response.
      type: object
    CreateUserRequest:
      example:
        ClientRequestToken: ""
        Email: ""
        UserId: ""
        FirstName: ""
        LastName: ""
        Tags: ""
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/user_UserId'
          - description: The ARN for the user.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/user_FirstName'
          - description: The first name for the user.
        LastName:
          allOf:
          - $ref: '#/components/schemas/user_LastName'
          - description: The last name for the user.
        Email:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address for the user.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "A unique, user-specified identifier for this request that\
              \ ensures idempotency. "
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the user.
      required:
      - UserId
      title: CreateUserRequest
      type: object
    ResourceInUseException: {}
    DeleteAddressBookResponse:
      properties: {}
      type: object
    DeleteAddressBookRequest:
      example:
        AddressBookArn: ""
      properties:
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the address book to delete.
      required:
      - AddressBookArn
      title: DeleteAddressBookRequest
      type: object
    DeleteBusinessReportScheduleResponse:
      properties: {}
      type: object
    DeleteBusinessReportScheduleRequest:
      example:
        ScheduleArn: ""
      properties:
        ScheduleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the business report schedule.
      required:
      - ScheduleArn
      title: DeleteBusinessReportScheduleRequest
      type: object
    DeleteConferenceProviderResponse:
      properties: {}
      type: object
    DeleteConferenceProviderRequest:
      example:
        ConferenceProviderArn: ""
      properties:
        ConferenceProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the conference provider.
      required:
      - ConferenceProviderArn
      title: DeleteConferenceProviderRequest
      type: object
    DeleteContactResponse:
      properties: {}
      type: object
    DeleteContactRequest:
      example:
        ContactArn: ""
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the contact to delete.
      required:
      - ContactArn
      title: DeleteContactRequest
      type: object
    DeleteDeviceResponse:
      properties: {}
      type: object
    DeleteDeviceRequest:
      example:
        DeviceArn: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device for which to request details.
      required:
      - DeviceArn
      title: DeleteDeviceRequest
      type: object
    DeleteDeviceUsageDataResponse:
      properties: {}
      type: object
    DeleteDeviceUsageDataRequest:
      example:
        DeviceArn: ""
        DeviceUsageType: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device.
        DeviceUsageType:
          allOf:
          - $ref: '#/components/schemas/DeviceUsageType'
          - description: The type of usage data to delete.
      required:
      - DeviceArn
      - DeviceUsageType
      title: DeleteDeviceUsageDataRequest
      type: object
    DeleteGatewayGroupResponse:
      properties: {}
      type: object
    DeleteGatewayGroupRequest:
      example:
        GatewayGroupArn: ""
      properties:
        GatewayGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway group to delete.
      required:
      - GatewayGroupArn
      title: DeleteGatewayGroupRequest
      type: object
    ResourceAssociatedException: {}
    DeleteNetworkProfileResponse:
      properties: {}
      type: object
    DeleteNetworkProfileRequest:
      example:
        NetworkProfileArn: ""
      properties:
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
      required:
      - NetworkProfileArn
      title: DeleteNetworkProfileRequest
      type: object
    DeleteProfileResponse:
      properties: {}
      type: object
    DeleteProfileRequest:
      example:
        ProfileArn: ""
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room profile to delete. Required.
      title: DeleteProfileRequest
      type: object
    DeleteRoomResponse:
      properties: {}
      type: object
    DeleteRoomRequest:
      example:
        RoomArn: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room to delete. Required.
      title: DeleteRoomRequest
      type: object
    DeleteRoomSkillParameterResponse:
      properties: {}
      type: object
    DeleteRoomSkillParameterRequest:
      example:
        RoomArn: ""
        SkillId: ""
        ParameterKey: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room from which to remove the room skill parameter
              details.
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The ID of the skill from which to remove the room skill parameter
              details.
        ParameterKey:
          allOf:
          - $ref: '#/components/schemas/RoomSkillParameterKey'
          - description: The room skill parameter key for which to remove details.
      required:
      - ParameterKey
      - SkillId
      title: DeleteRoomSkillParameterRequest
      type: object
    DeleteSkillAuthorizationResponse:
      properties: {}
      type: object
    DeleteSkillAuthorizationRequest:
      example:
        RoomArn: ""
        SkillId: ""
      properties:
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The unique identifier of a skill.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The room that the skill is authorized for.
      required:
      - SkillId
      title: DeleteSkillAuthorizationRequest
      type: object
    DeleteSkillGroupResponse:
      properties: {}
      type: object
    DeleteSkillGroupRequest:
      example:
        SkillGroupArn: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the skill group to delete. Required.
      title: DeleteSkillGroupRequest
      type: object
    DeleteUserResponse:
      properties: {}
      type: object
    DeleteUserRequest:
      example:
        UserArn: ""
        EnrollmentId: ""
      properties:
        UserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the user to delete in the organization. Required.
        EnrollmentId:
          allOf:
          - $ref: '#/components/schemas/EnrollmentId'
          - description: The ARN of the user's enrollment in the organization. Required.
      required:
      - EnrollmentId
      title: DeleteUserRequest
      type: object
    DisassociateContactFromAddressBookResponse:
      properties: {}
      type: object
    DisassociateContactFromAddressBookRequest:
      example:
        ContactArn: ""
        AddressBookArn: ""
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the contact to disassociate from an address book.
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the address from which to disassociate the contact.
      required:
      - AddressBookArn
      - ContactArn
      title: DisassociateContactFromAddressBookRequest
      type: object
    DisassociateDeviceFromRoomResponse:
      properties: {}
      type: object
    DisassociateDeviceFromRoomRequest:
      example:
        DeviceArn: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device to disassociate from a room. Required.
      title: DisassociateDeviceFromRoomRequest
      type: object
    DisassociateSkillFromSkillGroupResponse:
      properties: {}
      type: object
    DisassociateSkillFromSkillGroupRequest:
      example:
        SkillGroupArn: ""
        SkillId: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier of a skill. Required.
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The ARN of a skill group to associate to a skill.
      required:
      - SkillId
      title: DisassociateSkillFromSkillGroupRequest
      type: object
    DisassociateSkillFromUsersResponse:
      properties: {}
      type: object
    DisassociateSkillFromUsersRequest:
      example:
        SkillId: ""
      properties:
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: ' The private skill ID you want to make unavailable for enrolled
              users.'
      required:
      - SkillId
      title: DisassociateSkillFromUsersRequest
      type: object
    DisassociateSkillGroupFromRoomResponse:
      properties: {}
      type: object
    DisassociateSkillGroupFromRoomRequest:
      example:
        SkillGroupArn: ""
        RoomArn: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the skill group to disassociate from a room. Required.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room from which the skill group is to be disassociated.
              Required.
      title: DisassociateSkillGroupFromRoomRequest
      type: object
    ForgetSmartHomeAppliancesResponse:
      properties: {}
      type: object
    ForgetSmartHomeAppliancesRequest:
      example:
        RoomArn: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The room that the appliances are associated with.
      required:
      - RoomArn
      title: ForgetSmartHomeAppliancesRequest
      type: object
    GetAddressBookResponse:
      example:
        AddressBook:
          Description: ""
          AddressBookArn: ""
          Name: ""
      properties:
        AddressBook:
          $ref: '#/components/schemas/GetAddressBookResponse_AddressBook'
      type: object
    GetAddressBookRequest:
      example:
        AddressBookArn: ""
      properties:
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the address book for which to request details.
      required:
      - AddressBookArn
      title: GetAddressBookRequest
      type: object
    GetConferencePreferenceResponse:
      example:
        Preference:
          DefaultConferenceProviderArn: ""
      properties:
        Preference:
          $ref: '#/components/schemas/GetConferencePreferenceResponse_Preference'
      type: object
    GetConferencePreferenceRequest:
      properties: {}
      title: GetConferencePreferenceRequest
      type: object
    GetConferenceProviderResponse:
      example:
        ConferenceProvider:
          Type: ""
          MeetingSetting:
            RequirePin: ""
          PSTNDialIn:
            OneClickPinDelay: ""
            PhoneNumber: ""
            CountryCode: ""
            OneClickIdDelay: ""
          IPDialIn:
            Endpoint: ""
            CommsProtocol: ""
          Arn: ""
          Name: ""
      properties:
        ConferenceProvider:
          $ref: '#/components/schemas/GetConferenceProviderResponse_ConferenceProvider'
      type: object
    GetConferenceProviderRequest:
      example:
        ConferenceProviderArn: ""
      properties:
        ConferenceProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created conference provider.
      required:
      - ConferenceProviderArn
      title: GetConferenceProviderRequest
      type: object
    GetContactResponse:
      example:
        Contact:
          PhoneNumbers: ""
          SipAddresses: ""
          FirstName: ""
          DisplayName: ""
          PhoneNumber: ""
          ContactArn: ""
          LastName: ""
      properties:
        Contact:
          $ref: '#/components/schemas/GetContactResponse_Contact'
      type: object
    GetContactRequest:
      example:
        ContactArn: ""
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the contact for which to request details.
      required:
      - ContactArn
      title: GetContactRequest
      type: object
    GetDeviceResponse:
      example:
        Device:
          DeviceType: ""
          SoftwareVersion: ""
          NetworkProfileInfo:
            NetworkProfileArn: ""
            CertificateArn: ""
            CertificateExpirationTime: ""
          DeviceArn: ""
          RoomArn: ""
          DeviceStatus: ""
          DeviceSerialNumber: ""
          MacAddress: ""
          DeviceStatusInfo:
            ConnectionStatusUpdatedTime: ""
            DeviceStatusDetails: ""
            ConnectionStatus: ""
          DeviceName: ""
      properties:
        Device:
          $ref: '#/components/schemas/GetDeviceResponse_Device'
      type: object
    GetDeviceRequest:
      example:
        DeviceArn: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device for which to request details. Required.
      title: GetDeviceRequest
      type: object
    GetGatewayResponse:
      example:
        Gateway:
          Description: ""
          SoftwareVersion: ""
          Arn: ""
          GatewayGroupArn: ""
          Name: ""
      properties:
        Gateway:
          $ref: '#/components/schemas/GetGatewayResponse_Gateway'
      type: object
    GetGatewayRequest:
      example:
        GatewayArn: ""
      properties:
        GatewayArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway to get.
      required:
      - GatewayArn
      title: GetGatewayRequest
      type: object
    GetGatewayGroupResponse:
      example:
        GatewayGroup:
          Description: ""
          Arn: ""
          Name: ""
      properties:
        GatewayGroup:
          $ref: '#/components/schemas/GatewayGroup'
      type: object
    GetGatewayGroupRequest:
      example:
        GatewayGroupArn: ""
      properties:
        GatewayGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway group to get.
      required:
      - GatewayGroupArn
      title: GetGatewayGroupRequest
      type: object
    GetInvitationConfigurationResponse:
      example:
        OrganizationName: ""
        ContactEmail: ""
        PrivateSkillIds: ""
      properties:
        OrganizationName:
          allOf:
          - $ref: '#/components/schemas/OrganizationName'
          - description: The name of the organization sending the enrollment invite
              to a user.
        ContactEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: 'The email ID of the organization or individual contact that
              the enrolled user can use. '
        PrivateSkillIds:
          allOf:
          - $ref: '#/components/schemas/ShortSkillIdList'
          - description: The list of private skill IDs that you want to recommend
              to the user to enable in the invitation.
      type: object
    GetInvitationConfigurationRequest:
      properties: {}
      title: GetInvitationConfigurationRequest
      type: object
    GetNetworkProfileResponse:
      example:
        NetworkProfile:
          NextPassword: ""
          TrustAnchors: ""
          CertificateAuthorityArn: ""
          SecurityType: ""
          Description: ""
          NetworkProfileName: ""
          CurrentPassword: ""
          Ssid: ""
          EapMethod: ""
          NetworkProfileArn: ""
      properties:
        NetworkProfile:
          $ref: '#/components/schemas/GetNetworkProfileResponse_NetworkProfile'
      type: object
    GetNetworkProfileRequest:
      example:
        NetworkProfileArn: ""
      properties:
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
      required:
      - NetworkProfileArn
      title: GetNetworkProfileRequest
      type: object
    InvalidSecretsManagerResourceException: {}
    GetProfileResponse:
      example:
        Profile:
          IsDefault: ""
          Timezone: ""
          Locale: ""
          Address: ""
          TemperatureUnit: ""
          ProfileName: ""
          MaxVolumeLimit: ""
          ProfileArn: ""
          AddressBookArn: ""
          MeetingRoomConfiguration:
            RoomUtilizationMetricsEnabled: ""
            InstantBooking:
              DurationInMinutes: ""
              Enabled: ""
            RequireCheckIn:
              Enabled: ""
              ReleaseAfterMinutes: ""
            ProactiveJoin:
              EnabledByMotion: true
            EndOfMeetingReminder:
              Enabled: ""
              ReminderType: ""
              ReminderAtMinutes: ""
          DataRetentionOptIn: ""
          SetupModeDisabled: ""
          PSTNEnabled: ""
          DistanceUnit: ""
          WakeWord: ""
      properties:
        Profile:
          $ref: '#/components/schemas/GetProfileResponse_Profile'
      type: object
    GetProfileRequest:
      example:
        ProfileArn: ""
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room profile for which to request details.
              Required.
      title: GetProfileRequest
      type: object
    GetRoomResponse:
      example:
        Room:
          Description: ""
          RoomName: ""
          RoomArn: ""
          ProviderCalendarId: ""
          ProfileArn: ""
      properties:
        Room:
          $ref: '#/components/schemas/GetRoomResponse_Room'
      type: object
    GetRoomRequest:
      example:
        RoomArn: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room for which to request details. Required.
      title: GetRoomRequest
      type: object
    GetRoomSkillParameterResponse:
      example:
        RoomSkillParameter:
          ParameterValue: ""
          ParameterKey: ""
      properties:
        RoomSkillParameter:
          $ref: '#/components/schemas/GetRoomSkillParameterResponse_RoomSkillParameter'
      type: object
    GetRoomSkillParameterRequest:
      example:
        RoomArn: ""
        SkillId: ""
        ParameterKey: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the room from which to get the room skill parameter
              details. '
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The ARN of the skill from which to get the room skill parameter
              details. Required.
        ParameterKey:
          allOf:
          - $ref: '#/components/schemas/RoomSkillParameterKey'
          - description: The room skill parameter key for which to get details. Required.
      required:
      - ParameterKey
      - SkillId
      title: GetRoomSkillParameterRequest
      type: object
    GetSkillGroupResponse:
      example:
        SkillGroup:
          SkillGroupName: ""
          Description: ""
          SkillGroupArn: ""
      properties:
        SkillGroup:
          $ref: '#/components/schemas/GetSkillGroupResponse_SkillGroup'
      type: object
    GetSkillGroupRequest:
      example:
        SkillGroupArn: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the skill group for which to get details. Required.
      title: GetSkillGroupRequest
      type: object
    ListBusinessReportSchedulesResponse:
      example:
        NextToken: ""
        BusinessReportSchedules: ""
      properties:
        BusinessReportSchedules:
          allOf:
          - $ref: '#/components/schemas/BusinessReportScheduleList'
          - description: The schedule of the reports.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to list the remaining schedules from the previous
              API call.
      type: object
    ListBusinessReportSchedulesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to list the remaining schedules from the previous
              API call.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of schedules listed in the call.
      title: ListBusinessReportSchedulesRequest
      type: object
    ListConferenceProvidersResponse:
      example:
        NextToken: ""
        ConferenceProviders: ""
      properties:
        ConferenceProviders:
          allOf:
          - $ref: '#/components/schemas/ConferenceProvidersList'
          - description: The conference providers.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
      type: object
    ListConferenceProvidersRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of conference providers to be returned,\
              \ per paginated calls."
      title: ListConferenceProvidersRequest
      type: object
    ListDeviceEventsResponse:
      example:
        DeviceEvents: ""
        NextToken: ""
      properties:
        DeviceEvents:
          allOf:
          - $ref: '#/components/schemas/DeviceEventList'
          - description: The device events requested for the device ARN.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
      type: object
    ListDeviceEventsRequest:
      example:
        NextToken: ""
        DeviceArn: ""
        EventType: ""
        MaxResults: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a device.
        EventType:
          allOf:
          - $ref: '#/components/schemas/DeviceEventType'
          - description: "The event type to filter device events. If EventType isn't\
              \ specified, this returns a list of all device events in reverse chronological\
              \ order. If EventType is specified, this returns a list of device events\
              \ for that EventType in reverse chronological order. "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response only includes results beyond the token,\
              \ up to the value specified by MaxResults. When the end of results is\
              \ reached, the response has a value of null."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ The default value is 50. If more results exist than the specified\
              \ MaxResults value, a token is included in the response so that the\
              \ remaining results can be retrieved. "
      required:
      - DeviceArn
      title: ListDeviceEventsRequest
      type: object
    ListGatewayGroupsResponse:
      example:
        NextToken: ""
        GatewayGroups: ""
      properties:
        GatewayGroups:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupSummaries'
          - description: The gateway groups in the list.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to paginate though multiple pages of gateway
              group summaries.
      type: object
    ListGatewayGroupsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to paginate though multiple pages of gateway
              group summaries.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of gateway group summaries to return.
              The default is 50.
      title: ListGatewayGroupsRequest
      type: object
    ListGatewaysResponse:
      example:
        NextToken: ""
        Gateways: ""
      properties:
        Gateways:
          allOf:
          - $ref: '#/components/schemas/GatewaySummaries'
          - description: The gateways in the list.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to paginate though multiple pages of gateway
              summaries.
      type: object
    ListGatewaysRequest:
      example:
        NextToken: ""
        MaxResults: ""
        GatewayGroupArn: ""
      properties:
        GatewayGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The gateway group ARN for which to list gateways.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to paginate though multiple pages of gateway
              summaries.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of gateway summaries to return. The default
              is 50.
      title: ListGatewaysRequest
      type: object
    ListSkillsResponse:
      example:
        NextToken: ""
        SkillSummaries: ""
      properties:
        SkillSummaries:
          allOf:
          - $ref: '#/components/schemas/SkillSummaryList'
          - description: The list of enabled skills requested. Required.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
      type: object
    ListSkillsRequest:
      example:
        SkillGroupArn: ""
        NextToken: ""
        MaxResults: ""
        SkillType: ""
        EnablementType: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the skill group for which to list enabled skills.
        EnablementType:
          allOf:
          - $ref: '#/components/schemas/EnablementTypeFilter'
          - description: Whether the skill is enabled under the user's account.
        SkillType:
          allOf:
          - $ref: '#/components/schemas/SkillTypeFilter'
          - description: Whether the skill is publicly available or is a private skill.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by <code>MaxResults</code>."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/SkillListMaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified <code>MaxResults</code> value,\
              \ a token is included in the response so that the remaining results\
              \ can be retrieved."
      title: ListSkillsRequest
      type: object
    ListSkillsStoreCategoriesResponse:
      example:
        CategoryList: ""
        NextToken: ""
      properties:
        CategoryList:
          allOf:
          - $ref: '#/components/schemas/CategoryList'
          - description: The list of categories.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
      type: object
    ListSkillsStoreCategoriesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of categories returned, per paginated\
              \ calls."
      title: ListSkillsStoreCategoriesRequest
      type: object
    ListSkillsStoreSkillsByCategoryResponse:
      example:
        NextToken: ""
        SkillsStoreSkills: ""
      properties:
        SkillsStoreSkills:
          allOf:
          - $ref: '#/components/schemas/SkillsStoreSkillList'
          - description: The skill store skills.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
      type: object
    ListSkillsStoreSkillsByCategoryRequest:
      example:
        CategoryId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        CategoryId:
          allOf:
          - $ref: '#/components/schemas/CategoryId'
          - description: The category ID for which the skills are being retrieved
              from the skill store.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/SkillListMaxResults'
          - description: The maximum number of skills returned per paginated calls.
      required:
      - CategoryId
      title: ListSkillsStoreSkillsByCategoryRequest
      type: object
    ListSmartHomeAppliancesResponse:
      example:
        NextToken: ""
        SmartHomeAppliances: ""
      properties:
        SmartHomeAppliances:
          allOf:
          - $ref: '#/components/schemas/SmartHomeApplianceList'
          - description: The smart home appliances.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
      type: object
    ListSmartHomeAppliancesRequest:
      example:
        NextToken: ""
        RoomArn: ""
        MaxResults: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The room that the appliances are associated with.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of appliances to be returned, per paginated\
              \ calls."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The tokens used for pagination.
      required:
      - RoomArn
      title: ListSmartHomeAppliancesRequest
      type: object
    ListTagsResponse:
      example:
        NextToken: ""
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags requested for the specified resource.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
      type: object
    ListTagsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the specified resource for which to list tags.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by <code>MaxResults</code>. "
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified <code>MaxResults</code> value,\
              \ a token is included in the response so that the remaining results\
              \ can be retrieved."
      required:
      - Arn
      title: ListTagsRequest
      type: object
    PutConferencePreferenceResponse:
      properties: {}
      type: object
    PutConferencePreferenceRequest:
      example:
        ConferencePreference:
          DefaultConferenceProviderArn: ""
      properties:
        ConferencePreference:
          $ref: '#/components/schemas/PutConferencePreferenceRequest_ConferencePreference'
      required:
      - ConferencePreference
      title: PutConferencePreferenceRequest
      type: object
    PutInvitationConfigurationResponse:
      properties: {}
      type: object
    PutInvitationConfigurationRequest:
      example:
        OrganizationName: ""
        ContactEmail: ""
        PrivateSkillIds: ""
      properties:
        OrganizationName:
          allOf:
          - $ref: '#/components/schemas/OrganizationName'
          - description: The name of the organization sending the enrollment invite
              to a user.
        ContactEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: 'The email ID of the organization or individual contact that
              the enrolled user can use. '
        PrivateSkillIds:
          allOf:
          - $ref: '#/components/schemas/ShortSkillIdList'
          - description: The list of private skill IDs that you want to recommend
              to the user to enable in the invitation.
      required:
      - OrganizationName
      title: PutInvitationConfigurationRequest
      type: object
    PutRoomSkillParameterResponse:
      properties: {}
      type: object
    PutRoomSkillParameterRequest:
      example:
        RoomArn: ""
        SkillId: ""
        RoomSkillParameter:
          ParameterValue: ""
          ParameterKey: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room associated with the room skill parameter.
              Required.
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The ARN of the skill associated with the room skill parameter.
              Required.
        RoomSkillParameter:
          $ref: '#/components/schemas/PutRoomSkillParameterRequest_RoomSkillParameter'
      required:
      - RoomSkillParameter
      - SkillId
      title: PutRoomSkillParameterRequest
      type: object
    PutSkillAuthorizationResponse:
      properties: {}
      type: object
    PutSkillAuthorizationRequest:
      example:
        RoomArn: ""
        SkillId: ""
        AuthorizationResult: ""
      properties:
        AuthorizationResult:
          allOf:
          - $ref: '#/components/schemas/AuthorizationResult'
          - description: The authorization result specific to OAUTH code grant output.
              "Code” must be populated in the AuthorizationResult map to establish
              the authorization.
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The unique identifier of a skill.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The room that the skill is authorized for.
      required:
      - AuthorizationResult
      - SkillId
      title: PutSkillAuthorizationRequest
      type: object
    UnauthorizedException: {}
    RegisterAVSDeviceResponse:
      example:
        DeviceArn: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device.
      type: object
    RegisterAVSDeviceRequest:
      example:
        RoomArn: ""
        UserCode: ""
        ClientId: ""
        ProductId: ""
        AmazonId: ""
        DeviceSerialNumber: ""
        Tags: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: The client ID of the OEM used for code-based linking authorization
              on an AVS device.
        UserCode:
          allOf:
          - $ref: '#/components/schemas/UserCode'
          - description: The code that is obtained after your AVS device has made
              a POST request to LWA as a part of the Device Authorization Request
              component of the OAuth code-based linking specification.
        ProductId:
          allOf:
          - $ref: '#/components/schemas/ProductId'
          - description: The product ID used to identify your AVS device during authorization.
        DeviceSerialNumber:
          allOf:
          - $ref: '#/components/schemas/DeviceSerialNumberForAVS'
          - description: The key generated by the OEM that uniquely identifies a specified
              instance of your AVS device.
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          - description: The device type ID for your AVS device generated by Amazon
              when the OEM creates a new product on Amazon's Developer Console.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the room with which to
              associate your AVS device.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be added to the specified resource. Do not provide
              system tags.
      required:
      - AmazonId
      - ClientId
      - ProductId
      - UserCode
      title: RegisterAVSDeviceRequest
      type: object
    InvalidDeviceException: {}
    RejectSkillResponse:
      properties: {}
      type: object
    RejectSkillRequest:
      example:
        SkillId: ""
      properties:
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The unique identifier of the skill.
      required:
      - SkillId
      title: RejectSkillRequest
      type: object
    ResolveRoomResponse:
      example:
        RoomSkillParameters: ""
        RoomName: ""
        RoomArn: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room from which the skill request was invoked.
        RoomName:
          allOf:
          - $ref: '#/components/schemas/RoomName'
          - description: The name of the room from which the skill request was invoked.
        RoomSkillParameters:
          allOf:
          - $ref: '#/components/schemas/RoomSkillParameters'
          - description: Response to get the room profile request. Required.
      type: object
    ResolveRoomRequest:
      example:
        UserId: ""
        SkillId: ""
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The ARN of the user. Required.
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The ARN of the skill that was requested. Required.
      required:
      - SkillId
      - UserId
      title: ResolveRoomRequest
      type: object
    RevokeInvitationResponse:
      properties: {}
      type: object
    RevokeInvitationRequest:
      example:
        UserArn: ""
        EnrollmentId: ""
      properties:
        UserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the user for whom to revoke an enrollment invitation.
              Required.
        EnrollmentId:
          allOf:
          - $ref: '#/components/schemas/EnrollmentId'
          - description: The ARN of the enrollment invitation to revoke. Required.
      title: RevokeInvitationRequest
      type: object
    SearchAddressBooksResponse:
      example:
        TotalCount: ""
        NextToken: ""
        AddressBooks: ""
      properties:
        AddressBooks:
          allOf:
          - $ref: '#/components/schemas/AddressBookDataList'
          - description: "The address books that meet the specified set of filter\
              \ criteria, in sort order."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of address books returned.
      type: object
    SearchAddressBooksRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: The filters to use to list a specified set of address books.
              The supported filter key is AddressBookName.
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: The sort order to use in listing the specified set of address
              books. The supported sort key is AddressBookName.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response only includes results beyond the token,\
              \ up to the value specified by MaxResults."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
      title: SearchAddressBooksRequest
      type: object
    SearchContactsResponse:
      example:
        TotalCount: ""
        Contacts: ""
        NextToken: ""
      properties:
        Contacts:
          allOf:
          - $ref: '#/components/schemas/ContactDataList'
          - description: "The contacts that meet the specified set of filter criteria,\
              \ in sort order."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of contacts returned.
      type: object
    SearchContactsRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "The filters to use to list a specified set of address books.\
              \ The supported filter keys are DisplayName, FirstName, LastName, and\
              \ AddressBookArns."
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: "The sort order to use in listing the specified set of contacts.\
              \ The supported sort keys are DisplayName, FirstName, and LastName."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response only includes results beyond the token,\
              \ up to the value specified by MaxResults."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
      title: SearchContactsRequest
      type: object
    SearchDevicesResponse:
      example:
        TotalCount: ""
        NextToken: ""
        Devices: ""
      properties:
        Devices:
          allOf:
          - $ref: '#/components/schemas/DeviceDataList'
          - description: "The devices that meet the specified set of filter criteria,\
              \ in sort order."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of devices returned.
      type: object
    SearchDevicesRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by <code>MaxResults</code>."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified <code>MaxResults</code> value,\
              \ a token is included in the response so that the remaining results\
              \ can be retrieved."
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "The filters to use to list a specified set of devices. Supported\
              \ filter keys are DeviceName, DeviceStatus, DeviceStatusDetailCode,\
              \ RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, ConnectionStatus\
              \ (ONLINE and OFFLINE), NetworkProfileName, NetworkProfileArn, Feature,\
              \ and FailureCode."
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: "The sort order to use in listing the specified set of devices.\
              \ Supported sort keys are DeviceName, DeviceStatus, RoomName, DeviceType,\
              \ DeviceSerialNumber, ConnectionStatus, NetworkProfileName, NetworkProfileArn,\
              \ Feature, and FailureCode."
      title: SearchDevicesRequest
      type: object
    SearchNetworkProfilesResponse:
      example:
        TotalCount: ""
        NextToken: ""
        NetworkProfiles: ""
      properties:
        NetworkProfiles:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileDataList'
          - description: "The network profiles that meet the specified set of filter\
              \ criteria, in sort order. It is a list of NetworkProfileData objects. "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by MaxResults."
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of network profiles returned.
      type: object
    SearchNetworkProfilesRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by MaxResults. "
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved. "
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "The filters to use to list a specified set of network profiles.\
              \ Valid filters are NetworkProfileName, Ssid, and SecurityType."
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: "The sort order to use to list the specified set of network\
              \ profiles. Valid sort criteria includes NetworkProfileName, Ssid, and\
              \ SecurityType."
      title: SearchNetworkProfilesRequest
      type: object
    SearchProfilesResponse:
      example:
        TotalCount: ""
        NextToken: ""
        Profiles: ""
      properties:
        Profiles:
          allOf:
          - $ref: '#/components/schemas/ProfileDataList'
          - description: "The profiles that meet the specified set of filter criteria,\
              \ in sort order."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of room profiles returned.
      type: object
    SearchProfilesRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by <code>MaxResults</code>."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified <code>MaxResults</code> value,\
              \ a token is included in the response so that the remaining results\
              \ can be retrieved."
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: 'The filters to use to list a specified set of room profiles.
              Supported filter keys are ProfileName and Address. Required. '
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: The sort order to use in listing the specified set of room
              profiles. Supported sort keys are ProfileName and Address.
      title: SearchProfilesRequest
      type: object
    SearchRoomsResponse:
      example:
        TotalCount: ""
        NextToken: ""
        Rooms: ""
      properties:
        Rooms:
          allOf:
          - $ref: '#/components/schemas/RoomDataList'
          - description: "The rooms that meet the specified set of filter criteria,\
              \ in sort order."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of rooms returned.
      type: object
    SearchRoomsRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by <code>MaxResults</code>."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified <code>MaxResults</code> value,\
              \ a token is included in the response so that the remaining results\
              \ can be retrieved. "
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: The filters to use to list a specified set of rooms. The
              supported filter keys are RoomName and ProfileName.
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: The sort order to use in listing the specified set of rooms.
              The supported sort keys are RoomName and ProfileName.
      title: SearchRoomsRequest
      type: object
    SearchSkillGroupsResponse:
      example:
        TotalCount: ""
        NextToken: ""
        SkillGroups: ""
      properties:
        SkillGroups:
          allOf:
          - $ref: '#/components/schemas/SkillGroupDataList'
          - description: "The skill groups that meet the filter criteria, in sort\
              \ order."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of skill groups returned.
      type: object
    SearchSkillGroupsRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by <code>MaxResults</code>. Required."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified <code>MaxResults</code> value,\
              \ a token is included in the response so that the remaining results\
              \ can be retrieved. "
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: 'The filters to use to list a specified set of skill groups.
              The supported filter key is SkillGroupName. '
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: 'The sort order to use in listing the specified set of skill
              groups. The supported sort key is SkillGroupName. '
      title: SearchSkillGroupsRequest
      type: object
    SearchUsersResponse:
      example:
        TotalCount: ""
        NextToken: ""
        Users: ""
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UserDataList'
          - description: "The users that meet the specified set of filter criteria,\
              \ in sort order."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of users returned.
      type: object
    SearchUsersRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An optional token returned from a prior request. Use this\
              \ token for pagination of results from this action. If this parameter\
              \ is specified, the response includes only results beyond the token,\
              \ up to the value specified by <code>MaxResults</code>. Required."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to include in the response.\
              \ If more results exist than the specified <code>MaxResults</code> value,\
              \ a token is included in the response so that the remaining results\
              \ can be retrieved. Required."
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "The filters to use for listing a specific set of users.\
              \ Required. Supported filter keys are UserId, FirstName, LastName, Email,\
              \ and EnrollmentStatus."
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortList'
          - description: "The sort order to use in listing the filtered set of users.\
              \ Required. Supported sort keys are UserId, FirstName, LastName, Email,\
              \ and EnrollmentStatus."
      title: SearchUsersRequest
      type: object
    SendAnnouncementResponse:
      example:
        AnnouncementArn: ""
      properties:
        AnnouncementArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The identifier of the announcement.
      type: object
    SendAnnouncementRequest:
      example:
        ClientRequestToken: ""
        Content:
          AudioList: ""
          SsmlList: ""
          TextList: ""
        RoomFilters: ""
        TimeToLiveInSeconds: ""
      properties:
        RoomFilters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "The filters to use to send an announcement to a specified\
              \ list of rooms. The supported filter keys are RoomName, ProfileName,\
              \ RoomArn, and ProfileArn. To send to all rooms, specify an empty RoomFilters\
              \ list."
        Content:
          $ref: '#/components/schemas/SendAnnouncementRequest_Content'
        TimeToLiveInSeconds:
          allOf:
          - $ref: '#/components/schemas/TimeToLiveInSeconds'
          - description: "The time to live for an announcement. Default is 300. If\
              \ delivery doesn't occur within this time, the announcement is not delivered."
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "The unique, user-specified identifier for the request that\
              \ ensures idempotency."
      required:
      - ClientRequestToken
      - Content
      - RoomFilters
      title: SendAnnouncementRequest
      type: object
    SendInvitationResponse:
      properties: {}
      type: object
    SendInvitationRequest:
      example:
        UserArn: ""
      properties:
        UserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the user to whom to send an invitation. Required.
      title: SendInvitationRequest
      type: object
    InvalidUserStatusException: {}
    StartDeviceSyncResponse:
      properties: {}
      type: object
    StartDeviceSyncRequest:
      example:
        RoomArn: ""
        DeviceArn: ""
        Features: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room with which the device to sync is associated.
              Required.
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device to sync. Required.
        Features:
          allOf:
          - $ref: '#/components/schemas/Features'
          - description: Request structure to start the device sync. Required.
      required:
      - Features
      title: StartDeviceSyncRequest
      type: object
    StartSmartHomeApplianceDiscoveryResponse:
      properties: {}
      type: object
    StartSmartHomeApplianceDiscoveryRequest:
      example:
        RoomArn: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The room where smart home appliance discovery was initiated.
      required:
      - RoomArn
      title: StartSmartHomeApplianceDiscoveryRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the resource to which to add metadata tags. Required. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'The tags to be added to the specified resource. Do not provide
              system tags. Required. '
      required:
      - Arn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        Arn: ""
        TagKeys: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the resource from which to remove metadata tags.
              Required. '
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: 'The tags to be removed from the specified resource. Do not
              provide system tags. Required. '
      required:
      - Arn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateAddressBookResponse:
      properties: {}
      type: object
    UpdateAddressBookRequest:
      example:
        Description: ""
        AddressBookArn: ""
        Name: ""
      properties:
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/AddressBookName'
          - description: The updated name of the room.
        Description:
          allOf:
          - $ref: '#/components/schemas/AddressBookDescription'
          - description: The updated description of the room.
      required:
      - AddressBookArn
      title: UpdateAddressBookRequest
      type: object
    NameInUseException: {}
    UpdateBusinessReportScheduleResponse:
      properties: {}
      type: object
    UpdateBusinessReportScheduleRequest:
      example:
        ScheduleArn: ""
        Recurrence:
          StartDate: ""
        Format: ""
        S3KeyPrefix: ""
        S3BucketName: ""
        ScheduleName: ""
      properties:
        ScheduleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the business report schedule.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/CustomerS3BucketName'
          - description: The S3 location of the output reports.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: The S3 key where the report is delivered.
        Format:
          allOf:
          - $ref: '#/components/schemas/BusinessReportFormat'
          - description: The format of the generated report (individual CSV files
              or zipped files of individual files).
        ScheduleName:
          allOf:
          - $ref: '#/components/schemas/BusinessReportScheduleName'
          - description: The name identifier of the schedule.
        Recurrence:
          $ref: '#/components/schemas/UpdateBusinessReportScheduleRequest_Recurrence'
      required:
      - ScheduleArn
      title: UpdateBusinessReportScheduleRequest
      type: object
    UpdateConferenceProviderResponse:
      properties: {}
      type: object
    UpdateConferenceProviderRequest:
      example:
        MeetingSetting:
          RequirePin: ""
        ConferenceProviderType: ""
        PSTNDialIn:
          OneClickPinDelay: ""
          PhoneNumber: ""
          CountryCode: ""
          OneClickIdDelay: ""
        IPDialIn:
          Endpoint: ""
          CommsProtocol: ""
        ConferenceProviderArn: ""
      properties:
        ConferenceProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the conference provider.
        ConferenceProviderType:
          allOf:
          - $ref: '#/components/schemas/ConferenceProviderType'
          - description: The type of the conference provider.
        IPDialIn:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_IPDialIn'
        PSTNDialIn:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_PSTNDialIn'
        MeetingSetting:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_MeetingSetting'
      required:
      - ConferenceProviderArn
      - ConferenceProviderType
      - MeetingSetting
      title: UpdateConferenceProviderRequest
      type: object
    UpdateContactResponse:
      properties: {}
      type: object
    UpdateContactRequest:
      example:
        PhoneNumbers: ""
        SipAddresses: ""
        FirstName: ""
        DisplayName: ""
        PhoneNumber: ""
        ContactArn: ""
        LastName: ""
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the contact to update.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The updated display name of the contact.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The updated first name of the contact.
        LastName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The updated last name of the contact.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/RawPhoneNumber'
          - description: "The updated phone number of the contact. The phone number\
              \ type defaults to WORK. You can either specify PhoneNumber or PhoneNumbers.\
              \ We recommend that you use PhoneNumbers, which lets you specify the\
              \ phone number type and multiple numbers."
        PhoneNumbers:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberList'
          - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
          - $ref: '#/components/schemas/SipAddressList'
          - description: The list of SIP addresses for the contact.
      required:
      - ContactArn
      title: UpdateContactRequest
      type: object
    UpdateDeviceResponse:
      properties: {}
      type: object
    UpdateDeviceRequest:
      example:
        DeviceArn: ""
        DeviceName: ""
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the device to update. Required.
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The updated device name. Required.
      title: UpdateDeviceRequest
      type: object
    UpdateGatewayResponse:
      properties: {}
      type: object
    UpdateGatewayRequest:
      example:
        GatewayArn: ""
        Description: ""
        SoftwareVersion: ""
        Name: ""
      properties:
        GatewayArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/GatewayName'
          - description: The updated name of the gateway.
        Description:
          allOf:
          - $ref: '#/components/schemas/GatewayDescription'
          - description: The updated description of the gateway.
        SoftwareVersion:
          allOf:
          - $ref: '#/components/schemas/GatewayVersion'
          - description: The updated software version of the gateway. The gateway
              automatically updates its software version during normal operation.
      required:
      - GatewayArn
      title: UpdateGatewayRequest
      type: object
    UpdateGatewayGroupResponse:
      properties: {}
      type: object
    UpdateGatewayGroupRequest:
      example:
        Description: ""
        GatewayGroupArn: ""
        Name: ""
      properties:
        GatewayGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway group to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupName'
          - description: The updated name of the gateway group.
        Description:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupDescription'
          - description: The updated description of the gateway group.
      required:
      - GatewayGroupArn
      title: UpdateGatewayGroupRequest
      type: object
    UpdateNetworkProfileResponse:
      properties: {}
      type: object
    UpdateNetworkProfileRequest:
      example:
        NextPassword: ""
        TrustAnchors: ""
        CertificateAuthorityArn: ""
        Description: ""
        NetworkProfileName: ""
        CurrentPassword: ""
        NetworkProfileArn: ""
      properties:
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileName'
          - description: The name of the network profile associated with a device.
        Description:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileDescription'
          - description: Detailed information about a device's network profile.
        CurrentPassword:
          allOf:
          - $ref: '#/components/schemas/CurrentWiFiPassword'
          - description: The current password of the Wi-Fi network.
        NextPassword:
          allOf:
          - $ref: '#/components/schemas/NextWiFiPassword'
          - description: "The next, or subsequent, password of the Wi-Fi network.\
              \ This password is asynchronously transmitted to the device and is used\
              \ when the password of the network changes to NextPassword. "
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the Private Certificate Authority (PCA) created
              in AWS Certificate Manager (ACM). This is used to issue certificates
              to the devices. '
        TrustAnchors:
          allOf:
          - $ref: '#/components/schemas/TrustAnchorList'
          - description: 'The root certificate(s) of your authentication server that
              will be installed on your devices and used to trust your authentication
              server during EAP negotiation. '
      required:
      - NetworkProfileArn
      title: UpdateNetworkProfileRequest
      type: object
    UpdateProfileResponse:
      properties: {}
      type: object
    UpdateProfileRequest:
      example:
        IsDefault: ""
        Timezone: ""
        Locale: ""
        Address: ""
        TemperatureUnit: ""
        ProfileName: ""
        MaxVolumeLimit: ""
        ProfileArn: ""
        MeetingRoomConfiguration:
          RoomUtilizationMetricsEnabled: ""
          InstantBooking:
            DurationInMinutes: ""
            Enabled: ""
          RequireCheckIn:
            Enabled: ""
            ReleaseAfterMinutes: ""
          ProactiveJoin:
            EnabledByMotion: true
          EndOfMeetingReminder:
            Enabled: ""
            ReminderType: ""
            ReminderAtMinutes: ""
        DataRetentionOptIn: ""
        SetupModeDisabled: ""
        PSTNEnabled: ""
        DistanceUnit: ""
        WakeWord: ""
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the room profile to update. Required.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The updated name for the room profile.
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Sets the profile as default if selected. If this is missing,\
              \ no update is done to the default status."
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: The updated timezone for the room profile.
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          - description: The updated address for the room profile.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          - description: The updated distance unit for the room profile.
        TemperatureUnit:
          allOf:
          - $ref: '#/components/schemas/TemperatureUnit'
          - description: The updated temperature unit for the room profile.
        WakeWord:
          allOf:
          - $ref: '#/components/schemas/WakeWord'
          - description: The updated wake word for the room profile.
        Locale:
          allOf:
          - $ref: '#/components/schemas/DeviceLocale'
          - description: The updated locale for the room profile. (This is currently
              only available to a limited preview audience.)
        SetupModeDisabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the setup mode of the profile is enabled.
        MaxVolumeLimit:
          allOf:
          - $ref: '#/components/schemas/MaxVolumeLimit'
          - description: The updated maximum volume limit for the room profile.
        PSTNEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the PSTN setting of the room profile is enabled.
        DataRetentionOptIn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether data retention of the profile is enabled.
        MeetingRoomConfiguration:
          $ref: '#/components/schemas/UpdateProfileRequest_MeetingRoomConfiguration'
      title: UpdateProfileRequest
      type: object
    UpdateRoomResponse:
      properties: {}
      type: object
    UpdateRoomRequest:
      example:
        Description: ""
        RoomName: ""
        RoomArn: ""
        ProviderCalendarId: ""
        ProfileArn: ""
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the room to update. '
        RoomName:
          allOf:
          - $ref: '#/components/schemas/RoomName'
          - description: The updated name for the room.
        Description:
          allOf:
          - $ref: '#/components/schemas/RoomDescription'
          - description: The updated description for the room.
        ProviderCalendarId:
          allOf:
          - $ref: '#/components/schemas/ProviderCalendarId'
          - description: The updated provider calendar ARN for the room.
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The updated profile ARN for the room.
      title: UpdateRoomRequest
      type: object
    UpdateSkillGroupResponse:
      properties: {}
      type: object
    UpdateSkillGroupRequest:
      example:
        SkillGroupName: ""
        Description: ""
        SkillGroupArn: ""
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the skill group to update. '
        SkillGroupName:
          allOf:
          - $ref: '#/components/schemas/SkillGroupName'
          - description: The updated name for the skill group.
        Description:
          allOf:
          - $ref: '#/components/schemas/SkillGroupDescription'
          - description: The updated description for the skill group.
      title: UpdateSkillGroupRequest
      type: object
    Address:
      maxLength: 500
      minLength: 1
      type: string
    Arn:
      pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
        .]{0,63}:[^/].{0,1023}"
      type: string
    AddressBookName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    AddressBookDescription:
      maxLength: 200
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    AddressBook:
      description: An address book with attributes.
      properties:
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the address book.
        Name:
          allOf:
          - $ref: '#/components/schemas/AddressBookName'
          - description: The name of the address book.
        Description:
          allOf:
          - $ref: '#/components/schemas/AddressBookDescription'
          - description: The description of the address book.
      type: object
    AddressBookData:
      description: Information related to an address book.
      properties:
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the address book.
        Name:
          allOf:
          - $ref: '#/components/schemas/AddressBookName'
          - description: The name of the address book.
        Description:
          allOf:
          - $ref: '#/components/schemas/AddressBookDescription'
          - description: The description of the address book.
      type: object
    AddressBookDataList:
      items:
        $ref: '#/components/schemas/AddressBookData'
      type: array
    AmazonId:
      pattern: "[a-zA-Z0-9]{1,18}"
      type: string
    ApplianceDescription:
      type: string
    ApplianceFriendlyName:
      type: string
    ApplianceManufacturerName:
      type: string
    SkillId:
      pattern: "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\\
        .app\\.[0-9a-f\\-]{1,200})"
      type: string
    Locale:
      enum:
      - en-US
      type: string
    AudioLocation:
      maxLength: 1200
      minLength: 0
      pattern: "https://([A-Za-z0-9_.-]+)?(s3-[A-Za-z0-9-]+|s3\\.([A-Za-z0-9-])+|s3|s3.dualstack\\\
        .([A-Za-z0-9-])+)+.amazonaws.com/.*"
      type: string
    Audio:
      description: "<p>The audio message. There is a 1 MB limit on the audio file\
        \ input and the only supported format is MP3. To convert your MP3 audio files\
        \ to an Alexa-friendly, </p> <p>required codec version (MPEG version 2) and\
        \ bit rate (48 kbps), you might use converter software. One option for this\
        \ is a command-line tool, FFmpeg. For more information, see <a href=\"https://www.ffmpeg.org/\"\
        >FFmpeg</a>. The following command converts the provided &lt;input-file&gt;\
        \ to an MP3 file that is played in the announcement:</p> <p> <code>ffmpeg\
        \ -i &lt;input-file&gt; -ac 2 -codec:a libmp3lame -b:a 48k -ar 16000 &lt;output-file.mp3&gt;</code>\
        \ </p>"
      properties:
        Locale:
          allOf:
          - $ref: '#/components/schemas/Locale'
          - description: "The locale of the audio message. Currently, en-US is supported."
        Location:
          allOf:
          - $ref: '#/components/schemas/AudioLocation'
          - description: "The location of the audio file. Currently, S3 URLs are supported.\
              \ Only S3 locations comprised of safe characters are valid. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#Safe%20Characters\"\
              >Safe Characters</a>."
      required:
      - Locale
      - Location
      type: object
    AudioList:
      items:
        $ref: '#/components/schemas/Audio'
      maxItems: 1
      type: array
    Value:
      minLength: 1
      type: string
    AuthorizationResult:
      additionalProperties:
        $ref: '#/components/schemas/Value'
      type: object
    Boolean:
      type: boolean
    BulletPoint:
      type: string
    BulletPoints:
      items:
        $ref: '#/components/schemas/BulletPoint'
      type: array
    BusinessReportStatus:
      enum:
      - RUNNING
      - SUCCEEDED
      - FAILED
      type: string
    BusinessReportFailureCode:
      enum:
      - ACCESS_DENIED
      - NO_SUCH_BUCKET
      - INTERNAL_FAILURE
      type: string
    BusinessReportS3Location:
      description: The S3 location of the output reports.
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/BusinessReportS3Path'
          - description: The path of the business report.
        BucketName:
          allOf:
          - $ref: '#/components/schemas/CustomerS3BucketName'
          - description: The S3 bucket name of the output reports.
      type: object
    BusinessReportDeliveryTime:
      format: date-time
      type: string
    BusinessReportDownloadUrl:
      type: string
    BusinessReport:
      description: Usage report with specified parameters.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/BusinessReportStatus'
          - description: "The status of the report generation execution (RUNNING,\
              \ SUCCEEDED, or FAILED)."
        FailureCode:
          allOf:
          - $ref: '#/components/schemas/BusinessReportFailureCode'
          - description: The failure code.
        S3Location:
          $ref: '#/components/schemas/BusinessReport_S3Location'
        DeliveryTime:
          allOf:
          - $ref: '#/components/schemas/BusinessReportDeliveryTime'
          - description: The time of report delivery.
        DownloadUrl:
          allOf:
          - $ref: '#/components/schemas/BusinessReportDownloadUrl'
          - description: The download link where a user can download the report.
      type: object
    BusinessReportInterval:
      enum:
      - ONE_DAY
      - ONE_WEEK
      - THIRTY_DAYS
      type: string
    BusinessReportContentRange:
      description: The content range of the report.
      properties:
        Interval:
          allOf:
          - $ref: '#/components/schemas/BusinessReportInterval'
          - description: The interval of the content range.
      required:
      - Interval
      type: object
    BusinessReportFormat:
      enum:
      - CSV
      - CSV_ZIP
      type: string
    Date:
      pattern: "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$"
      type: string
    BusinessReportRecurrence:
      description: The recurrence of the reports.
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The start date.
      type: object
    BusinessReportS3Path:
      type: string
    CustomerS3BucketName:
      pattern: "[a-z0-9-\\.]{3,63}"
      type: string
    BusinessReportScheduleName:
      maxLength: 64
      minLength: 0
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    S3KeyPrefix:
      maxLength: 100
      minLength: 0
      pattern: "[A-Za-z0-9!_\\-\\.\\*'()/]*"
      type: string
    BusinessReportSchedule:
      description: The schedule of the usage report.
      properties:
        ScheduleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the business report schedule.
        ScheduleName:
          allOf:
          - $ref: '#/components/schemas/BusinessReportScheduleName'
          - description: The name identifier of the schedule.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/CustomerS3BucketName'
          - description: The S3 bucket name of the output reports.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: The S3 key where the report is delivered.
        Format:
          allOf:
          - $ref: '#/components/schemas/BusinessReportFormat'
          - description: The format of the generated report (individual CSV files
              or zipped files of individual files).
        ContentRange:
          $ref: '#/components/schemas/CreateBusinessReportScheduleRequest_ContentRange'
        Recurrence:
          $ref: '#/components/schemas/UpdateBusinessReportScheduleRequest_Recurrence'
        LastBusinessReport:
          $ref: '#/components/schemas/BusinessReportSchedule_LastBusinessReport'
      type: object
    BusinessReportScheduleList:
      items:
        $ref: '#/components/schemas/BusinessReportSchedule'
      type: array
    CategoryId:
      minimum: 1
      type: integer
    CategoryName:
      type: string
    Category:
      description: "The skill store category that is shown. Alexa skills are assigned\
        \ a specific skill category during creation, such as News, Social, and Sports."
      properties:
        CategoryId:
          allOf:
          - $ref: '#/components/schemas/CategoryId'
          - description: The ID of the skill store category.
        CategoryName:
          allOf:
          - $ref: '#/components/schemas/CategoryName'
          - description: The name of the skill store category.
      type: object
    CategoryList:
      items:
        $ref: '#/components/schemas/Category'
      type: array
    CertificateTime:
      format: date-time
      type: string
    ClientId:
      pattern: "^\\S\\+\\{1,256\\}$"
      type: string
    ClientRequestToken:
      description: "A unique, user-specified identifier for the request that ensures\
        \ idempotency."
      maxLength: 150
      minLength: 10
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      type: string
    CommsProtocol:
      enum:
      - SIP
      - SIPS
      - H323
      type: string
    ConferencePreference:
      description: The default conference provider that is used if no other scheduled
        meetings are detected.
      properties:
        DefaultConferenceProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the default conference provider.
      type: object
    ConferenceProviderName:
      maxLength: 50
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    ConferenceProviderType:
      enum:
      - CHIME
      - BLUEJEANS
      - FUZE
      - GOOGLE_HANGOUTS
      - POLYCOM
      - RINGCENTRAL
      - SKYPE_FOR_BUSINESS
      - WEBEX
      - ZOOM
      - CUSTOM
      type: string
    IPDialIn:
      description: The IP endpoint and protocol for calling.
      properties:
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          - description: The IP address.
        CommsProtocol:
          allOf:
          - $ref: '#/components/schemas/CommsProtocol'
          - description: "The protocol, including SIP, SIPS, and H323."
      required:
      - CommsProtocol
      - Endpoint
      type: object
    PSTNDialIn:
      description: The information for public switched telephone network (PSTN) conferencing.
      properties:
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/CountryCode'
          - description: The zip code.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/OutboundPhoneNumber'
          - description: The phone number to call to join the conference.
        OneClickIdDelay:
          allOf:
          - $ref: '#/components/schemas/OneClickIdDelay'
          - description: "The delay duration before Alexa enters the conference ID\
              \ with dual-tone multi-frequency (DTMF). Each number on the dial pad\
              \ corresponds to a DTMF tone, which is how we send data over the telephone\
              \ network."
        OneClickPinDelay:
          allOf:
          - $ref: '#/components/schemas/OneClickPinDelay'
          - description: "The delay duration before Alexa enters the conference pin\
              \ with dual-tone multi-frequency (DTMF). Each number on the dial pad\
              \ corresponds to a DTMF tone, which is how we send data over the telephone\
              \ network."
      required:
      - CountryCode
      - OneClickIdDelay
      - OneClickPinDelay
      - PhoneNumber
      type: object
    MeetingSetting:
      description: "<p>The values that indicate whether a pin is always required (YES),\
        \ never required (NO), or OPTIONAL.</p> <ul> <li> <p>If YES, Alexa will always\
        \ ask for a meeting pin.</p> </li> <li> <p>If NO, Alexa will never ask for\
        \ a meeting pin.</p> </li> <li> <p>If OPTIONAL, Alexa will ask if you have\
        \ a meeting pin and if the customer responds with yes, it will ask for the\
        \ meeting pin.</p> </li> </ul>"
      properties:
        RequirePin:
          allOf:
          - $ref: '#/components/schemas/RequirePin'
          - description: The values that indicate whether the pin is always required.
      required:
      - RequirePin
      type: object
    ConferenceProvider:
      description: "An entity that provides a conferencing solution. Alexa for Business\
        \ acts as the voice interface and mediator that connects users to their preferred\
        \ conference provider. Examples of conference providers include Amazon Chime,\
        \ Zoom, Cisco, and Polycom. "
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the newly created conference provider.
        Name:
          allOf:
          - $ref: '#/components/schemas/ConferenceProviderName'
          - description: The name of the conference provider.
        Type:
          allOf:
          - $ref: '#/components/schemas/ConferenceProviderType'
          - description: The type of conference providers.
        IPDialIn:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_IPDialIn'
        PSTNDialIn:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_PSTNDialIn'
        MeetingSetting:
          $ref: '#/components/schemas/CreateConferenceProviderRequest_MeetingSetting'
      type: object
    ConferenceProvidersList:
      items:
        $ref: '#/components/schemas/ConferenceProvider'
      type: array
    ConnectionStatus:
      enum:
      - ONLINE
      - OFFLINE
      type: string
    ConnectionStatusUpdatedTime:
      format: date-time
      type: string
    ContactName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    RawPhoneNumber:
      format: password
      maxLength: 50
      minLength: 0
      pattern: "^[\\+0-9\\#\\,\\(][\\+0-9\\-\\.\\/\\(\\)\\,\\#\\s]+$"
      type: string
    PhoneNumberList:
      items:
        $ref: '#/components/schemas/PhoneNumber'
      maxItems: 3
      minItems: 0
      type: array
    SipAddressList:
      items:
        $ref: '#/components/schemas/SipAddress'
      maxItems: 1
      minItems: 0
      type: array
    Contact:
      description: A contact with attributes.
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the contact.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The name of the contact to display on the console.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: "The first name of the contact, used to call the contact\
              \ on the device."
        LastName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: "The last name of the contact, used to call the contact on\
              \ the device."
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/RawPhoneNumber'
          - description: "The phone number of the contact. The phone number type defaults\
              \ to WORK. You can either specify PhoneNumber or PhoneNumbers. We recommend\
              \ that you use PhoneNumbers, which lets you specify the phone number\
              \ type and multiple numbers."
        PhoneNumbers:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberList'
          - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
          - $ref: '#/components/schemas/SipAddressList'
          - description: The list of SIP addresses for the contact.
      type: object
    ContactData:
      description: Information related to a contact.
      properties:
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the contact.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: The name of the contact to display on the console.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: "The first name of the contact, used to call the contact\
              \ on the device."
        LastName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          - description: "The last name of the contact, used to call the contact on\
              \ the device."
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/RawPhoneNumber'
          - description: "The phone number of the contact. The phone number type defaults\
              \ to WORK. You can specify PhoneNumber or PhoneNumbers. We recommend\
              \ that you use PhoneNumbers, which lets you specify the phone number\
              \ type and multiple numbers."
        PhoneNumbers:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberList'
          - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
          - $ref: '#/components/schemas/SipAddressList'
          - description: The list of SIP addresses for the contact.
      type: object
    ContactDataList:
      items:
        $ref: '#/components/schemas/ContactData'
      type: array
    TextList:
      items:
        $ref: '#/components/schemas/Text'
      maxItems: 1
      type: array
    SsmlList:
      items:
        $ref: '#/components/schemas/Ssml'
      maxItems: 1
      type: array
    Content:
      description: "The content definition. This can contain only one text, SSML,\
        \ or audio list object."
      properties:
        TextList:
          allOf:
          - $ref: '#/components/schemas/TextList'
          - description: The list of text messages.
        SsmlList:
          allOf:
          - $ref: '#/components/schemas/SsmlList'
          - description: The list of SSML messages.
        AudioList:
          allOf:
          - $ref: '#/components/schemas/AudioList'
          - description: The list of audio messages.
      type: object
    CountryCode:
      pattern: "\\d{1,3}"
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    EndOfMeetingReminderMinutesList:
      items:
        $ref: '#/components/schemas/Minutes'
      maxItems: 1
      minItems: 1
      type: array
    EndOfMeetingReminderType:
      enum:
      - ANNOUNCEMENT_TIME_CHECK
      - ANNOUNCEMENT_VARIABLE_TIME_LEFT
      - CHIME
      - KNOCK
      type: string
    CreateEndOfMeetingReminder:
      description: Creates settings for the end of meeting reminder feature that are
        applied to a room profile. The end of meeting reminder enables Alexa to remind
        users when a meeting is ending.
      example:
        Enabled: ""
        ReminderType: ""
        ReminderAtMinutes: ""
      properties:
        ReminderAtMinutes:
          allOf:
          - $ref: '#/components/schemas/EndOfMeetingReminderMinutesList'
          - description: ' A range of 3 to 15 minutes that determines when the reminder
              begins.'
        ReminderType:
          allOf:
          - $ref: '#/components/schemas/EndOfMeetingReminderType'
          - description: 'The type of sound that users hear during the end of meeting
              reminder. '
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether an end of meeting reminder is enabled or not.
      required:
      - Enabled
      - ReminderAtMinutes
      - ReminderType
      type: object
    GatewayGroupName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    GatewayGroupDescription:
      maxLength: 200
      minLength: 0
      type: string
    Minutes:
      type: integer
    CreateInstantBooking:
      description: "Creates settings for the instant booking feature that are applied\
        \ to a room profile. When users start their meeting with Alexa, Alexa automatically\
        \ books the room for the configured duration if the room is available."
      properties:
        DurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/Minutes'
          - description: Duration between 15 and 240 minutes at increments of 15 that
              determines how long to book an available room when a meeting is started
              with Alexa.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether instant booking is enabled or not.
      required:
      - DurationInMinutes
      - Enabled
      type: object
    CreateRequireCheckIn:
      description: "Creates settings for the require check in feature that are applied\
        \ to a room profile. Require check in allows a meeting room’s Alexa or AVS\
        \ device to prompt the user to check in; otherwise, the room will be released."
      properties:
        ReleaseAfterMinutes:
          allOf:
          - $ref: '#/components/schemas/Minutes'
          - description: Duration between 5 and 20 minutes to determine when to release
              the room if it's not checked into.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether require check in is enabled or not.
      required:
      - Enabled
      - ReleaseAfterMinutes
      type: object
    CreateProactiveJoin:
      example:
        EnabledByMotion: true
      properties:
        EnabledByMotion:
          type: boolean
      required:
      - EnabledByMotion
      type: object
    CreateMeetingRoomConfiguration:
      description: Creates meeting room settings of a room profile.
      properties:
        RoomUtilizationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether room utilization metrics are enabled or not.
        EndOfMeetingReminder:
          $ref: '#/components/schemas/CreateEndOfMeetingReminder'
        InstantBooking:
          $ref: '#/components/schemas/CreateMeetingRoomConfiguration_InstantBooking'
        RequireCheckIn:
          $ref: '#/components/schemas/CreateMeetingRoomConfiguration_RequireCheckIn'
        ProactiveJoin:
          $ref: '#/components/schemas/CreateProactiveJoin'
      type: object
    NetworkProfileName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    NetworkProfileDescription:
      maxLength: 200
      minLength: 0
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    NetworkSsid:
      maxLength: 32
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    NetworkSecurityType:
      enum:
      - OPEN
      - WEP
      - WPA_PSK
      - WPA2_PSK
      - WPA2_ENTERPRISE
      type: string
    NetworkEapMethod:
      enum:
      - EAP_TLS
      type: string
    CurrentWiFiPassword:
      format: password
      maxLength: 128
      minLength: 5
      pattern: "[\\x00-\\x7F]*"
      type: string
    NextWiFiPassword:
      format: password
      maxLength: 128
      minLength: 0
      pattern: "(^$)|([\\x00-\\x7F]{5,})"
      type: string
    TrustAnchorList:
      items:
        $ref: '#/components/schemas/TrustAnchor'
      maxItems: 5
      minItems: 1
      type: array
    ProfileName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    Timezone:
      maxLength: 100
      minLength: 1
      type: string
    DistanceUnit:
      enum:
      - METRIC
      - IMPERIAL
      type: string
    TemperatureUnit:
      enum:
      - FAHRENHEIT
      - CELSIUS
      type: string
    WakeWord:
      enum:
      - ALEXA
      - AMAZON
      - ECHO
      - COMPUTER
      type: string
    DeviceLocale:
      maxLength: 256
      minLength: 1
      type: string
    MaxVolumeLimit:
      type: integer
    RoomName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    RoomDescription:
      maxLength: 200
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    ProviderCalendarId:
      maxLength: 100
      minLength: 0
      type: string
    SkillGroupName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    SkillGroupDescription:
      maxLength: 200
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    user_UserId:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9@_+.-]*"
      type: string
    user_FirstName:
      maxLength: 30
      minLength: 0
      pattern: "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*"
      type: string
    user_LastName:
      maxLength: 30
      minLength: 0
      pattern: "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*"
      type: string
    Email:
      maxLength: 128
      minLength: 1
      pattern: "\\w[+-.\\w]*@\\w[\\w\\.\\-]+\\.[0-9a-zA-Z]{2,24}"
      type: string
    DeviceUsageType:
      enum:
      - VOICE
      type: string
    RoomSkillParameterKey:
      maxLength: 256
      minLength: 1
      type: string
    EnrollmentId:
      maxLength: 128
      minLength: 0
      type: string
    DeveloperName:
      type: string
    PrivacyPolicy:
      type: string
    Url:
      type: string
    DeveloperInfo:
      description: The details about the developer that published the skill.
      properties:
        DeveloperName:
          allOf:
          - $ref: '#/components/schemas/DeveloperName'
          - description: The name of the developer.
        PrivacyPolicy:
          allOf:
          - $ref: '#/components/schemas/PrivacyPolicy'
          - description: The URL of the privacy policy.
        Email:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email of the developer.
        Url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The website of the developer.
      type: object
    DeviceSerialNumber:
      pattern: "[a-zA-Z0-9]{1,200}"
      type: string
    DeviceType:
      pattern: "[a-zA-Z0-9]{1,200}"
      type: string
    DeviceName:
      maxLength: 100
      minLength: 2
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    SoftwareVersion:
      type: string
    MacAddress:
      type: string
    DeviceStatus:
      enum:
      - READY
      - PENDING
      - WAS_OFFLINE
      - DEREGISTERED
      - FAILED
      type: string
    DeviceStatusInfo:
      description: Detailed information about a device's status.
      properties:
        DeviceStatusDetails:
          allOf:
          - $ref: '#/components/schemas/DeviceStatusDetails'
          - description: One or more device status detail descriptions.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatus'
          - description: 'The latest available information about the connection status
              of a device. '
        ConnectionStatusUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusUpdatedTime'
          - description: The time (in epoch) when the device connection status changed.
      type: object
    DeviceNetworkProfileInfo:
      description: Detailed information about a device's network profile.
      properties:
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the certificate associated with a device.
        CertificateExpirationTime:
          allOf:
          - $ref: '#/components/schemas/CertificateTime'
          - description: The time (in epoch) when the certificate expires.
      type: object
    Device:
      description: A device with attributes.
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a device.
        DeviceSerialNumber:
          allOf:
          - $ref: '#/components/schemas/DeviceSerialNumber'
          - description: The serial number of a device.
        DeviceType:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: The type of a device.
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The name of a device.
        SoftwareVersion:
          allOf:
          - $ref: '#/components/schemas/SoftwareVersion'
          - description: The software version of a device.
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/MacAddress'
          - description: The MAC address of a device.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The room ARN of a device.
        DeviceStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: "The status of a device. If the status is not READY, check\
              \ the DeviceStatusInfo value for details."
        DeviceStatusInfo:
          $ref: '#/components/schemas/Device_DeviceStatusInfo'
        NetworkProfileInfo:
          $ref: '#/components/schemas/Device_NetworkProfileInfo'
      type: object
    DeviceRoomName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    DeviceDataCreatedTime:
      format: date-time
      type: string
    DeviceData:
      description: Device attributes.
      properties:
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a device.
        DeviceSerialNumber:
          allOf:
          - $ref: '#/components/schemas/DeviceSerialNumber'
          - description: The serial number of a device.
        DeviceType:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: The type of a device.
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The name of a device.
        SoftwareVersion:
          allOf:
          - $ref: '#/components/schemas/SoftwareVersion'
          - description: The software version of a device.
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/MacAddress'
          - description: The MAC address of a device.
        DeviceStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The status of a device.
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileName'
          - description: The name of the network profile associated with a device.
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The room ARN associated with a device.
        RoomName:
          allOf:
          - $ref: '#/components/schemas/DeviceRoomName'
          - description: The name of the room associated with a device.
        DeviceStatusInfo:
          $ref: '#/components/schemas/Device_DeviceStatusInfo'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DeviceDataCreatedTime'
          - description: The time (in epoch) when the device data was created.
      type: object
    DeviceDataList:
      items:
        $ref: '#/components/schemas/DeviceData'
      type: array
    DeviceEventType:
      enum:
      - CONNECTION_STATUS
      - DEVICE_STATUS
      type: string
    DeviceEventValue:
      type: string
    DeviceEventTime:
      format: date-time
      type: string
    DeviceEvent:
      description: The list of device events.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/DeviceEventType'
          - description: The type of device event.
        Value:
          allOf:
          - $ref: '#/components/schemas/DeviceEventValue'
          - description: The value of the event.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/DeviceEventTime'
          - description: 'The time (in epoch) when the event occurred. '
      type: object
    DeviceEventList:
      items:
        $ref: '#/components/schemas/DeviceEvent'
      type: array
    DeviceSerialNumberForAVS:
      pattern: "^[a-zA-Z0-9]{1,50}$"
      type: string
    Feature:
      enum:
      - BLUETOOTH
      - VOLUME
      - NOTIFICATIONS
      - LISTS
      - SKILLS
      - NETWORK_PROFILE
      - SETTINGS
      - ALL
      type: string
    DeviceStatusDetailCode:
      enum:
      - DEVICE_SOFTWARE_UPDATE_NEEDED
      - DEVICE_WAS_OFFLINE
      - CREDENTIALS_ACCESS_FAILURE
      - TLS_VERSION_MISMATCH
      - ASSOCIATION_REJECTION
      - AUTHENTICATION_FAILURE
      - DHCP_FAILURE
      - INTERNET_UNAVAILABLE
      - DNS_FAILURE
      - UNKNOWN_FAILURE
      - CERTIFICATE_ISSUING_LIMIT_EXCEEDED
      - INVALID_CERTIFICATE_AUTHORITY
      - NETWORK_PROFILE_NOT_FOUND
      - INVALID_PASSWORD_STATE
      - PASSWORD_NOT_FOUND
      - PASSWORD_MANAGER_ACCESS_DENIED
      - CERTIFICATE_AUTHORITY_ACCESS_DENIED
      type: string
    DeviceStatusDetail:
      description: Details of a device’s status.
      properties:
        Feature:
          allOf:
          - $ref: '#/components/schemas/Feature'
          - description: The list of available features on the device.
        Code:
          allOf:
          - $ref: '#/components/schemas/DeviceStatusDetailCode'
          - description: The device status detail code.
      type: object
    DeviceStatusDetails:
      items:
        $ref: '#/components/schemas/DeviceStatusDetail'
      type: array
    EnablementType:
      enum:
      - ENABLED
      - PENDING
      type: string
    EnablementTypeFilter:
      enum:
      - ENABLED
      - PENDING
      type: string
    EndOfMeetingReminder:
      description: 'Settings for the end of meeting reminder feature that are applied
        to a room profile. The end of meeting reminder enables Alexa to remind users
        when a meeting is ending. '
      properties:
        ReminderAtMinutes:
          allOf:
          - $ref: '#/components/schemas/EndOfMeetingReminderMinutesList'
          - description: A range of 3 to 15 minutes that determines when the reminder
              begins.
        ReminderType:
          allOf:
          - $ref: '#/components/schemas/EndOfMeetingReminderType'
          - description: 'The type of sound that users hear during the end of meeting
              reminder. '
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether an end of meeting reminder is enabled or not.
      type: object
    EndUserLicenseAgreement:
      type: string
    Endpoint:
      maxLength: 256
      minLength: 1
      type: string
    EnrollmentStatus:
      enum:
      - INITIALIZED
      - PENDING
      - REGISTERED
      - DISASSOCIATING
      - DEREGISTERING
      type: string
    Features:
      items:
        $ref: '#/components/schemas/Feature'
      type: array
    FilterKey:
      maxLength: 500
      minLength: 1
      type: string
    FilterValueList:
      items:
        $ref: '#/components/schemas/FilterValue'
      maxItems: 50
      type: array
    Filter:
      description: A filter name and value pair that is used to return a more specific
        list of results. Filters can be used to match a set of resources by various
        criteria.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/FilterKey'
          - description: The key of a filter.
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValueList'
          - description: The values of a filter.
      required:
      - Key
      - Values
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      maxItems: 25
      type: array
    FilterValue:
      maxLength: 500
      minLength: 1
      type: string
    GatewayName:
      maxLength: 253
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    GatewayDescription:
      maxLength: 200
      minLength: 0
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    GatewayVersion:
      maxLength: 50
      minLength: 1
      type: string
    Gateway:
      description: 'The details of the gateway. '
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway.
        Name:
          allOf:
          - $ref: '#/components/schemas/GatewayName'
          - description: The name of the gateway.
        Description:
          allOf:
          - $ref: '#/components/schemas/GatewayDescription'
          - description: The description of the gateway.
        GatewayGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway group that the gateway is associated
              to.
        SoftwareVersion:
          allOf:
          - $ref: '#/components/schemas/GatewayVersion'
          - description: The software version of the gateway. The gateway automatically
              updates its software version during normal operation.
      type: object
    GatewayGroup:
      description: The details of the gateway group.
      example:
        Description: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupName'
          - description: The name of the gateway group.
        Description:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupDescription'
          - description: The description of the gateway group.
      type: object
    GatewayGroupSummary:
      description: The summary of a gateway group.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupName'
          - description: The name of the gateway group.
        Description:
          allOf:
          - $ref: '#/components/schemas/GatewayGroupDescription'
          - description: The description of the gateway group.
      type: object
    GatewayGroupSummaries:
      items:
        $ref: '#/components/schemas/GatewayGroupSummary'
      type: array
    GatewaySummary:
      description: The summary of a gateway.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway.
        Name:
          allOf:
          - $ref: '#/components/schemas/GatewayName'
          - description: The name of the gateway.
        Description:
          allOf:
          - $ref: '#/components/schemas/GatewayDescription'
          - description: The description of the gateway.
        GatewayGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the gateway group that the gateway is associated
              to.
        SoftwareVersion:
          allOf:
          - $ref: '#/components/schemas/GatewayVersion'
          - description: The software version of the gateway. The gateway automatically
              updates its software version during normal operation.
      type: object
    GatewaySummaries:
      items:
        $ref: '#/components/schemas/GatewaySummary'
      type: array
    GenericKeyword:
      type: string
    GenericKeywords:
      items:
        $ref: '#/components/schemas/GenericKeyword'
      type: array
    OrganizationName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    ShortSkillIdList:
      items:
        $ref: '#/components/schemas/SkillId'
      maxItems: 3
      minItems: 0
      type: array
    NetworkProfile:
      description: The network profile associated with a device.
      properties:
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileName'
          - description: The name of the network profile associated with a device.
        Description:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileDescription'
          - description: Detailed information about a device's network profile.
        Ssid:
          allOf:
          - $ref: '#/components/schemas/NetworkSsid'
          - description: The SSID of the Wi-Fi network.
        SecurityType:
          allOf:
          - $ref: '#/components/schemas/NetworkSecurityType'
          - description: "The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE,\
              \ WPA2_PSK, WPA_PSK, WEP, or OPEN."
        EapMethod:
          allOf:
          - $ref: '#/components/schemas/NetworkEapMethod'
          - description: "The authentication standard that is used in the EAP framework.\
              \ Currently, EAP_TLS is supported. "
        CurrentPassword:
          allOf:
          - $ref: '#/components/schemas/CurrentWiFiPassword'
          - description: The current password of the Wi-Fi network.
        NextPassword:
          allOf:
          - $ref: '#/components/schemas/NextWiFiPassword'
          - description: "The next, or subsequent, password of the Wi-Fi network.\
              \ This password is asynchronously transmitted to the device and is used\
              \ when the password of the network changes to NextPassword. "
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the Private Certificate Authority (PCA) created
              in AWS Certificate Manager (ACM). This is used to issue certificates
              to the devices. '
        TrustAnchors:
          allOf:
          - $ref: '#/components/schemas/TrustAnchorList'
          - description: "The root certificates of your authentication server, which\
              \ is installed on your devices and used to trust your authentication\
              \ server during EAP negotiation."
      type: object
    Profile:
      description: A room profile with attributes.
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a room profile.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of a room profile.
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Retrieves if the profile is default or not.
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          - description: The address of a room profile.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: The time zone of a room profile.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          - description: The distance unit of a room profile.
        TemperatureUnit:
          allOf:
          - $ref: '#/components/schemas/TemperatureUnit'
          - description: The temperature unit of a room profile.
        WakeWord:
          allOf:
          - $ref: '#/components/schemas/WakeWord'
          - description: The wake word of a room profile.
        Locale:
          allOf:
          - $ref: '#/components/schemas/DeviceLocale'
          - description: The locale of a room profile. (This is currently available
              only to a limited preview audience.)
        SetupModeDisabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The setup mode of a room profile.
        MaxVolumeLimit:
          allOf:
          - $ref: '#/components/schemas/MaxVolumeLimit'
          - description: The max volume limit of a room profile.
        PSTNEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The PSTN setting of a room profile.
        DataRetentionOptIn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether data retention of the profile is enabled.
        AddressBookArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the address book.
        MeetingRoomConfiguration:
          $ref: '#/components/schemas/Profile_MeetingRoomConfiguration'
      type: object
    Room:
      description: A room with attributes.
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a room.
        RoomName:
          allOf:
          - $ref: '#/components/schemas/RoomName'
          - description: The name of a room.
        Description:
          allOf:
          - $ref: '#/components/schemas/RoomDescription'
          - description: The description of a room.
        ProviderCalendarId:
          allOf:
          - $ref: '#/components/schemas/ProviderCalendarId'
          - description: The provider calendar ARN of a room.
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The profile ARN of a room.
      type: object
    RoomSkillParameter:
      description: A skill parameter associated with a room.
      properties:
        ParameterKey:
          allOf:
          - $ref: '#/components/schemas/RoomSkillParameterKey'
          - description: The parameter key of a room skill parameter. ParameterKey
              is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid
              values.
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/RoomSkillParameterValue'
          - description: The parameter value of a room skill parameter.
      required:
      - ParameterKey
      - ParameterValue
      type: object
    SkillGroup:
      description: A skill group with attributes.
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a skill group.
        SkillGroupName:
          allOf:
          - $ref: '#/components/schemas/SkillGroupName'
          - description: The name of a skill group.
        Description:
          allOf:
          - $ref: '#/components/schemas/SkillGroupDescription'
          - description: The description of a skill group.
      type: object
    IconUrl:
      type: string
    InstantBooking:
      description: "Settings for the instant booking feature that are applied to a\
        \ room profile. When users start their meeting with Alexa, Alexa automatically\
        \ books the room for the configured duration if the room is available."
      properties:
        DurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/Minutes'
          - description: 'Duration between 15 and 240 minutes at increments of 15
              that determines how long to book an available room when a meeting is
              started with Alexa. '
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether instant booking is enabled or not.
      type: object
    InvocationPhrase:
      type: string
    Key:
      minLength: 1
      type: string
    NextToken:
      maxLength: 1100
      minLength: 1
      type: string
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    SkillTypeFilter:
      enum:
      - PUBLIC
      - PRIVATE
      - ALL
      type: string
    SkillListMaxResults:
      maximum: 10
      minimum: 1
      type: integer
    SkillSummaryList:
      items:
        $ref: '#/components/schemas/SkillSummary'
      type: array
    SkillsStoreSkillList:
      items:
        $ref: '#/components/schemas/SkillsStoreSkill'
      type: array
    SmartHomeApplianceList:
      items:
        $ref: '#/components/schemas/SmartHomeAppliance'
      type: array
    RequireCheckIn:
      description: "Settings for the require check in feature that are applied to\
        \ a room profile. Require check in allows a meeting room’s Alexa or AVS device\
        \ to prompt the user to check in; otherwise, the room will be released. "
      properties:
        ReleaseAfterMinutes:
          allOf:
          - $ref: '#/components/schemas/Minutes'
          - description: 'Duration between 5 and 20 minutes to determine when to release
              the room if it''s not checked into. '
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether require check in is enabled or not.
      type: object
    ProactiveJoin:
      example:
        EnabledByMotion: true
      properties:
        EnabledByMotion:
          type: boolean
      type: object
    MeetingRoomConfiguration:
      description: Meeting room settings of a room profile.
      properties:
        RoomUtilizationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether room utilization metrics are enabled or not.
        EndOfMeetingReminder:
          $ref: '#/components/schemas/MeetingRoomConfiguration_EndOfMeetingReminder'
        InstantBooking:
          $ref: '#/components/schemas/MeetingRoomConfiguration_InstantBooking'
        RequireCheckIn:
          $ref: '#/components/schemas/MeetingRoomConfiguration_RequireCheckIn'
        ProactiveJoin:
          $ref: '#/components/schemas/ProactiveJoin'
      type: object
    RequirePin:
      enum:
      - "YES"
      - "NO"
      - OPTIONAL
      type: string
    NetworkProfileData:
      description: The data associated with a network profile.
      properties:
        NetworkProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileName'
          - description: The name of the network profile associated with a device.
        Description:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileDescription'
          - description: Detailed information about a device's network profile.
        Ssid:
          allOf:
          - $ref: '#/components/schemas/NetworkSsid'
          - description: The SSID of the Wi-Fi network.
        SecurityType:
          allOf:
          - $ref: '#/components/schemas/NetworkSecurityType'
          - description: "The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE,\
              \ WPA2_PSK, WPA_PSK, WEP, or OPEN."
        EapMethod:
          allOf:
          - $ref: '#/components/schemas/NetworkEapMethod'
          - description: "The authentication standard that is used in the EAP framework.\
              \ Currently, EAP_TLS is supported."
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the Private Certificate Authority (PCA) created
              in AWS Certificate Manager (ACM). This is used to issue certificates
              to the devices.
      type: object
    NetworkProfileDataList:
      items:
        $ref: '#/components/schemas/NetworkProfileData'
      type: array
    NewInThisVersionBulletPoints:
      items:
        $ref: '#/components/schemas/BulletPoint'
      type: array
    OneClickIdDelay:
      maxLength: 2
      minLength: 1
      type: string
    OneClickPinDelay:
      maxLength: 2
      minLength: 1
      type: string
    OutboundPhoneNumber:
      pattern: "\\d{10}"
      type: string
    PhoneNumberType:
      enum:
      - MOBILE
      - WORK
      - HOME
      format: password
      type: string
    PhoneNumber:
      description: The phone number for the contact containing the raw number and
        phone number type.
      properties:
        Number:
          allOf:
          - $ref: '#/components/schemas/RawPhoneNumber'
          - description: The raw value of the phone number.
        Type:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberType'
          - description: The type of the phone number.
      required:
      - Number
      - Type
      type: object
    ProductDescription:
      type: string
    ProductId:
      pattern: "^[a-zA-Z0-9_]{1,256}$"
      type: string
    ProfileData:
      description: The data of a room profile.
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a room profile.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The name of a room profile.
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Retrieves if the profile data is default or not.
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          - description: The address of a room profile.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: The time zone of a room profile.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          - description: The distance unit of a room profile.
        TemperatureUnit:
          allOf:
          - $ref: '#/components/schemas/TemperatureUnit'
          - description: The temperature unit of a room profile.
        WakeWord:
          allOf:
          - $ref: '#/components/schemas/WakeWord'
          - description: The wake word of a room profile.
        Locale:
          allOf:
          - $ref: '#/components/schemas/DeviceLocale'
          - description: The locale of a room profile. (This is currently available
              only to a limited preview audience.)
      type: object
    ProfileDataList:
      items:
        $ref: '#/components/schemas/ProfileData'
      type: array
    UserCode:
      maxLength: 128
      minLength: 1
      type: string
    ReleaseDate:
      type: string
    UserId:
      pattern: "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}"
      type: string
    RoomSkillParameters:
      items:
        $ref: '#/components/schemas/RoomSkillParameter'
      type: array
    ReviewKey:
      type: string
    ReviewValue:
      type: string
    Reviews:
      additionalProperties:
        $ref: '#/components/schemas/ReviewValue'
      type: object
    RoomData:
      description: The data of a room.
      properties:
        RoomArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a room.
        RoomName:
          allOf:
          - $ref: '#/components/schemas/RoomName'
          - description: The name of a room.
        Description:
          allOf:
          - $ref: '#/components/schemas/RoomDescription'
          - description: The description of a room.
        ProviderCalendarId:
          allOf:
          - $ref: '#/components/schemas/ProviderCalendarId'
          - description: The provider calendar ARN of a room.
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The profile ARN of a room.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          - description: The profile name of a room.
      type: object
    RoomDataList:
      items:
        $ref: '#/components/schemas/RoomData'
      type: array
    RoomSkillParameterValue:
      maxLength: 512
      minLength: 1
      type: string
    Utterance:
      type: string
    SampleUtterances:
      items:
        $ref: '#/components/schemas/Utterance'
      type: array
    SortList:
      items:
        $ref: '#/components/schemas/Sort'
      maxItems: 25
      type: array
    TotalCount:
      type: integer
    SkillGroupDataList:
      items:
        $ref: '#/components/schemas/SkillGroupData'
      type: array
    UserDataList:
      items:
        $ref: '#/components/schemas/UserData'
      type: array
    TimeToLiveInSeconds:
      maximum: 3600
      minimum: 1
      type: integer
    ShortDescription:
      type: string
    SipUri:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "^sip[s]?:([^@:]+)\\@([^@]+)$"
      type: string
    SipType:
      enum:
      - WORK
      format: password
      type: string
    SipAddress:
      description: The SIP address for the contact containing the URI and SIP address
        type.
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/SipUri'
          - description: The URI for the SIP address.
        Type:
          allOf:
          - $ref: '#/components/schemas/SipType'
          - description: The type of the SIP address.
      required:
      - Type
      - Uri
      type: object
    SkillTypes:
      items:
        $ref: '#/components/schemas/SkillStoreType'
      type: array
    SkillDetails:
      description: Granular information about the skill.
      properties:
        ProductDescription:
          allOf:
          - $ref: '#/components/schemas/ProductDescription'
          - description: The description of the product.
        InvocationPhrase:
          allOf:
          - $ref: '#/components/schemas/InvocationPhrase'
          - description: The phrase used to trigger the skill.
        ReleaseDate:
          allOf:
          - $ref: '#/components/schemas/ReleaseDate'
          - description: The date when the skill was released.
        EndUserLicenseAgreement:
          allOf:
          - $ref: '#/components/schemas/EndUserLicenseAgreement'
          - description: The URL of the end user license agreement.
        GenericKeywords:
          allOf:
          - $ref: '#/components/schemas/GenericKeywords'
          - description: The generic keywords associated with the skill that can be
              used to find a skill.
        BulletPoints:
          allOf:
          - $ref: '#/components/schemas/BulletPoints'
          - description: The details about what the skill supports organized as bullet
              points.
        NewInThisVersionBulletPoints:
          allOf:
          - $ref: '#/components/schemas/NewInThisVersionBulletPoints'
          - description: The updates added in bullet points.
        SkillTypes:
          allOf:
          - $ref: '#/components/schemas/SkillTypes'
          - description: The types of skills.
        Reviews:
          allOf:
          - $ref: '#/components/schemas/Reviews'
          - description: "<p> <i>This member has been deprecated.</i> </p> <p>The\
              \ list of reviews for the skill, including Key and Value pair.</p>"
        DeveloperInfo:
          $ref: '#/components/schemas/SkillDetails_DeveloperInfo'
      type: object
    SkillGroupData:
      description: The attributes of a skill group.
      properties:
        SkillGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The skill group ARN of a skill group.
        SkillGroupName:
          allOf:
          - $ref: '#/components/schemas/SkillGroupName'
          - description: The skill group name of a skill group.
        Description:
          allOf:
          - $ref: '#/components/schemas/SkillGroupDescription'
          - description: The description of a skill group.
      type: object
    SkillName:
      maxLength: 100
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    SkillStoreType:
      type: string
    boolean:
      type: boolean
    SkillType:
      enum:
      - PUBLIC
      - PRIVATE
      maxLength: 100
      minLength: 1
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      type: string
    SkillSummary:
      description: The summary of skills.
      properties:
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The ARN of the skill summary.
        SkillName:
          allOf:
          - $ref: '#/components/schemas/SkillName'
          - description: The name of the skill.
        SupportsLinking:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Linking support for a skill.
        EnablementType:
          allOf:
          - $ref: '#/components/schemas/EnablementType'
          - description: "Whether the skill is enabled under the user's account, or\
              \ if it requires linking to be used."
        SkillType:
          allOf:
          - $ref: '#/components/schemas/SkillType'
          - description: Whether the skill is publicly available or is a private skill.
      type: object
    SkillsStoreSkill:
      description: The detailed information about an Alexa skill.
      properties:
        SkillId:
          allOf:
          - $ref: '#/components/schemas/SkillId'
          - description: The ARN of the skill.
        SkillName:
          allOf:
          - $ref: '#/components/schemas/SkillName'
          - description: The name of the skill.
        ShortDescription:
          allOf:
          - $ref: '#/components/schemas/ShortDescription'
          - description: Short description about the skill.
        IconUrl:
          allOf:
          - $ref: '#/components/schemas/IconUrl'
          - description: The URL where the skill icon resides.
        SampleUtterances:
          allOf:
          - $ref: '#/components/schemas/SampleUtterances'
          - description: Sample utterances that interact with the skill.
        SkillDetails:
          $ref: '#/components/schemas/SkillsStoreSkill_SkillDetails'
        SupportsLinking:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Linking support for a skill.
      type: object
    SmartHomeAppliance:
      description: 'A smart home appliance that can connect to a central system. Any
        domestic device can be a smart appliance. '
      properties:
        FriendlyName:
          allOf:
          - $ref: '#/components/schemas/ApplianceFriendlyName'
          - description: The friendly name of the smart home appliance.
        Description:
          allOf:
          - $ref: '#/components/schemas/ApplianceDescription'
          - description: The description of the smart home appliance.
        ManufacturerName:
          allOf:
          - $ref: '#/components/schemas/ApplianceManufacturerName'
          - description: The name of the manufacturer of the smart home appliance.
      type: object
    SortKey:
      maxLength: 500
      minLength: 1
      type: string
    SortValue:
      enum:
      - ASC
      - DESC
      type: string
    Sort:
      description: 'An object representing a sort criteria. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SortKey'
          - description: The sort key of a sort object.
        Value:
          allOf:
          - $ref: '#/components/schemas/SortValue'
          - description: The sort value of a sort object.
      required:
      - Key
      - Value
      type: object
    SsmlValue:
      maxLength: 4096
      minLength: 0
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    Ssml:
      description: "The SSML message. For more information, see <a href=\"https://developer.amazon.com/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html\"\
        >SSML Reference</a>."
      properties:
        Locale:
          allOf:
          - $ref: '#/components/schemas/Locale'
          - description: "The locale of the SSML message. Currently, en-US is supported."
        Value:
          allOf:
          - $ref: '#/components/schemas/SsmlValue'
          - description: The value of the SSML message in the correct SSML format.
              The audio tag is not supported.
      required:
      - Locale
      - Value
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: 'A key-value pair that can be associated with a resource. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: 'The key of a tag. Tag keys are case-sensitive. '
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of a tag. Tag values are case sensitive and can
              be null.
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TextValue:
      maxLength: 4096
      minLength: 0
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    Text:
      description: The text message.
      properties:
        Locale:
          allOf:
          - $ref: '#/components/schemas/Locale'
          - description: "The locale of the text message. Currently, en-US is supported."
        Value:
          allOf:
          - $ref: '#/components/schemas/TextValue'
          - description: The value of the text message.
      required:
      - Locale
      - Value
      type: object
    TrustAnchor:
      pattern: "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\\
        u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\\
        u000D?\\u000A)?"
      type: string
    UpdateEndOfMeetingReminder:
      description: 'Settings for the end of meeting reminder feature that are applied
        to a room profile. The end of meeting reminder enables Alexa to remind users
        when a meeting is ending. '
      properties:
        ReminderAtMinutes:
          allOf:
          - $ref: '#/components/schemas/EndOfMeetingReminderMinutesList'
          - description: 'Updates settings for the end of meeting reminder feature
              that are applied to a room profile. The end of meeting reminder enables
              Alexa to remind users when a meeting is ending. '
        ReminderType:
          allOf:
          - $ref: '#/components/schemas/EndOfMeetingReminderType'
          - description: 'The type of sound that users hear during the end of meeting
              reminder. '
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether an end of meeting reminder is enabled or not.
      type: object
    UpdateInstantBooking:
      description: "Updates settings for the instant booking feature that are applied\
        \ to a room profile. If instant booking is enabled, Alexa automatically reserves\
        \ a room if it is free when a user joins a meeting with Alexa."
      properties:
        DurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/Minutes'
          - description: Duration between 15 and 240 minutes at increments of 15 that
              determines how long to book an available room when a meeting is started
              with Alexa.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether instant booking is enabled or not.
      type: object
    UpdateRequireCheckIn:
      description: "Updates settings for the require check in feature that are applied\
        \ to a room profile. Require check in allows a meeting room’s Alexa or AVS\
        \ device to prompt the user to check in; otherwise, the room will be released. "
      properties:
        ReleaseAfterMinutes:
          allOf:
          - $ref: '#/components/schemas/Minutes'
          - description: 'Duration between 5 and 20 minutes to determine when to release
              the room if it''s not checked into. '
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether require check in is enabled or not.
      type: object
    UpdateProactiveJoin:
      example:
        EnabledByMotion: true
      properties:
        EnabledByMotion:
          type: boolean
      required:
      - EnabledByMotion
      type: object
    UpdateMeetingRoomConfiguration:
      description: Updates meeting room settings of a room profile.
      properties:
        RoomUtilizationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether room utilization metrics are enabled or not.
        EndOfMeetingReminder:
          $ref: '#/components/schemas/UpdateMeetingRoomConfiguration_EndOfMeetingReminder'
        InstantBooking:
          $ref: '#/components/schemas/UpdateMeetingRoomConfiguration_InstantBooking'
        RequireCheckIn:
          $ref: '#/components/schemas/UpdateMeetingRoomConfiguration_RequireCheckIn'
        ProactiveJoin:
          $ref: '#/components/schemas/UpdateProactiveJoin'
      type: object
    UserData:
      description: Information related to a user.
      properties:
        UserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a user.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/user_FirstName'
          - description: The first name of a user.
        LastName:
          allOf:
          - $ref: '#/components/schemas/user_LastName'
          - description: The last name of a user.
        Email:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email of a user.
        EnrollmentStatus:
          allOf:
          - $ref: '#/components/schemas/EnrollmentStatus'
          - description: The enrollment status of a user.
        EnrollmentId:
          allOf:
          - $ref: '#/components/schemas/EnrollmentId'
          - description: The enrollment ARN of a user.
      type: object
    CreateBusinessReportScheduleRequest_ContentRange:
      allOf:
      - $ref: '#/components/schemas/BusinessReportContentRange'
      - description: The content range of the reports.
      example:
        Interval: ""
    CreateBusinessReportScheduleRequest_Recurrence:
      allOf:
      - $ref: '#/components/schemas/BusinessReportRecurrence'
      - description: "The recurrence of the reports. If this isn't specified, the\
          \ report will only be delivered one time when the API is called. "
      example:
        StartDate: ""
    CreateConferenceProviderRequest_IPDialIn:
      allOf:
      - $ref: '#/components/schemas/IPDialIn'
      - description: The IP endpoint and protocol for calling.
      example:
        Endpoint: ""
        CommsProtocol: ""
    CreateConferenceProviderRequest_PSTNDialIn:
      allOf:
      - $ref: '#/components/schemas/PSTNDialIn'
      - description: The information for PSTN conferencing.
      example:
        OneClickPinDelay: ""
        PhoneNumber: ""
        CountryCode: ""
        OneClickIdDelay: ""
    CreateConferenceProviderRequest_MeetingSetting:
      allOf:
      - $ref: '#/components/schemas/MeetingSetting'
      - description: The meeting settings for the conference provider.
      example:
        RequirePin: ""
    CreateProfileRequest_MeetingRoomConfiguration:
      allOf:
      - $ref: '#/components/schemas/CreateMeetingRoomConfiguration'
      - description: The meeting room settings of a room profile.
      example:
        RoomUtilizationMetricsEnabled: ""
        InstantBooking:
          DurationInMinutes: ""
          Enabled: ""
        RequireCheckIn:
          Enabled: ""
          ReleaseAfterMinutes: ""
        ProactiveJoin:
          EnabledByMotion: true
        EndOfMeetingReminder:
          Enabled: ""
          ReminderType: ""
          ReminderAtMinutes: ""
    GetAddressBookResponse_AddressBook:
      allOf:
      - $ref: '#/components/schemas/AddressBook'
      - description: The details of the requested address book.
      example:
        Description: ""
        AddressBookArn: ""
        Name: ""
    GetConferencePreferenceResponse_Preference:
      allOf:
      - $ref: '#/components/schemas/ConferencePreference'
      - description: The conference preference.
      example:
        DefaultConferenceProviderArn: ""
    GetConferenceProviderResponse_ConferenceProvider:
      allOf:
      - $ref: '#/components/schemas/ConferenceProvider'
      - description: The conference provider.
      example:
        Type: ""
        MeetingSetting:
          RequirePin: ""
        PSTNDialIn:
          OneClickPinDelay: ""
          PhoneNumber: ""
          CountryCode: ""
          OneClickIdDelay: ""
        IPDialIn:
          Endpoint: ""
          CommsProtocol: ""
        Arn: ""
        Name: ""
    GetContactResponse_Contact:
      allOf:
      - $ref: '#/components/schemas/Contact'
      - description: The details of the requested contact.
      example:
        PhoneNumbers: ""
        SipAddresses: ""
        FirstName: ""
        DisplayName: ""
        PhoneNumber: ""
        ContactArn: ""
        LastName: ""
    GetDeviceResponse_Device:
      allOf:
      - $ref: '#/components/schemas/Device'
      - description: The details of the device requested. Required.
      example:
        DeviceType: ""
        SoftwareVersion: ""
        NetworkProfileInfo:
          NetworkProfileArn: ""
          CertificateArn: ""
          CertificateExpirationTime: ""
        DeviceArn: ""
        RoomArn: ""
        DeviceStatus: ""
        DeviceSerialNumber: ""
        MacAddress: ""
        DeviceStatusInfo:
          ConnectionStatusUpdatedTime: ""
          DeviceStatusDetails: ""
          ConnectionStatus: ""
        DeviceName: ""
    GetGatewayResponse_Gateway:
      allOf:
      - $ref: '#/components/schemas/Gateway'
      - description: The details of the gateway.
      example:
        Description: ""
        SoftwareVersion: ""
        Arn: ""
        GatewayGroupArn: ""
        Name: ""
    GetNetworkProfileResponse_NetworkProfile:
      allOf:
      - $ref: '#/components/schemas/NetworkProfile'
      - description: The network profile associated with a device.
      example:
        NextPassword: ""
        TrustAnchors: ""
        CertificateAuthorityArn: ""
        SecurityType: ""
        Description: ""
        NetworkProfileName: ""
        CurrentPassword: ""
        Ssid: ""
        EapMethod: ""
        NetworkProfileArn: ""
    GetProfileResponse_Profile:
      allOf:
      - $ref: '#/components/schemas/Profile'
      - description: The details of the room profile requested. Required.
      example:
        IsDefault: ""
        Timezone: ""
        Locale: ""
        Address: ""
        TemperatureUnit: ""
        ProfileName: ""
        MaxVolumeLimit: ""
        ProfileArn: ""
        AddressBookArn: ""
        MeetingRoomConfiguration:
          RoomUtilizationMetricsEnabled: ""
          InstantBooking:
            DurationInMinutes: ""
            Enabled: ""
          RequireCheckIn:
            Enabled: ""
            ReleaseAfterMinutes: ""
          ProactiveJoin:
            EnabledByMotion: true
          EndOfMeetingReminder:
            Enabled: ""
            ReminderType: ""
            ReminderAtMinutes: ""
        DataRetentionOptIn: ""
        SetupModeDisabled: ""
        PSTNEnabled: ""
        DistanceUnit: ""
        WakeWord: ""
    GetRoomResponse_Room:
      allOf:
      - $ref: '#/components/schemas/Room'
      - description: The details of the room requested.
      example:
        Description: ""
        RoomName: ""
        RoomArn: ""
        ProviderCalendarId: ""
        ProfileArn: ""
    GetRoomSkillParameterResponse_RoomSkillParameter:
      allOf:
      - $ref: '#/components/schemas/RoomSkillParameter'
      - description: The details of the room skill parameter requested. Required.
      example:
        ParameterValue: ""
        ParameterKey: ""
    GetSkillGroupResponse_SkillGroup:
      allOf:
      - $ref: '#/components/schemas/SkillGroup'
      - description: The details of the skill group requested. Required.
      example:
        SkillGroupName: ""
        Description: ""
        SkillGroupArn: ""
    PutConferencePreferenceRequest_ConferencePreference:
      allOf:
      - $ref: '#/components/schemas/ConferencePreference'
      - description: The conference preference of a specific conference provider.
      example:
        DefaultConferenceProviderArn: ""
    PutRoomSkillParameterRequest_RoomSkillParameter:
      allOf:
      - $ref: '#/components/schemas/RoomSkillParameter'
      - description: The updated room skill parameter. Required.
      example:
        ParameterValue: ""
        ParameterKey: ""
    SendAnnouncementRequest_Content:
      allOf:
      - $ref: '#/components/schemas/Content'
      - description: "The announcement content. This can contain only one of the three\
          \ possible announcement types (text, SSML or audio)."
      example:
        AudioList: ""
        SsmlList: ""
        TextList: ""
    UpdateBusinessReportScheduleRequest_Recurrence:
      allOf:
      - $ref: '#/components/schemas/BusinessReportRecurrence'
      - description: The recurrence of the reports.
      example:
        StartDate: ""
    UpdateProfileRequest_MeetingRoomConfiguration:
      allOf:
      - $ref: '#/components/schemas/UpdateMeetingRoomConfiguration'
      - description: The updated meeting room settings of a room profile.
      example:
        RoomUtilizationMetricsEnabled: ""
        InstantBooking:
          DurationInMinutes: ""
          Enabled: ""
        RequireCheckIn:
          Enabled: ""
          ReleaseAfterMinutes: ""
        ProactiveJoin:
          EnabledByMotion: true
        EndOfMeetingReminder:
          Enabled: ""
          ReminderType: ""
          ReminderAtMinutes: ""
    BusinessReport_S3Location:
      allOf:
      - $ref: '#/components/schemas/BusinessReportS3Location'
      - description: The S3 location of the output reports.
    BusinessReportSchedule_LastBusinessReport:
      allOf:
      - $ref: '#/components/schemas/BusinessReport'
      - description: The details of the last business report delivery for a specified
          time interval.
    CreateMeetingRoomConfiguration_InstantBooking:
      allOf:
      - $ref: '#/components/schemas/CreateInstantBooking'
      - description: Settings to automatically book a room for a configured duration
          if it's free when joining a meeting with Alexa.
      example:
        DurationInMinutes: ""
        Enabled: ""
    CreateMeetingRoomConfiguration_RequireCheckIn:
      allOf:
      - $ref: '#/components/schemas/CreateRequireCheckIn'
      - description: "Settings for requiring a check in when a room is reserved. Alexa\
          \ can cancel a room reservation if it's not checked into to make the room\
          \ available for others. Users can check in by joining the meeting with Alexa\
          \ or an AVS device, or by saying “Alexa, check in.”"
      example:
        Enabled: ""
        ReleaseAfterMinutes: ""
    Device_DeviceStatusInfo:
      allOf:
      - $ref: '#/components/schemas/DeviceStatusInfo'
      - description: Detailed information about a device's status.
      example:
        ConnectionStatusUpdatedTime: ""
        DeviceStatusDetails: ""
        ConnectionStatus: ""
    Device_NetworkProfileInfo:
      allOf:
      - $ref: '#/components/schemas/DeviceNetworkProfileInfo'
      - description: Detailed information about a device's network profile.
      example:
        NetworkProfileArn: ""
        CertificateArn: ""
        CertificateExpirationTime: ""
    Profile_MeetingRoomConfiguration:
      allOf:
      - $ref: '#/components/schemas/MeetingRoomConfiguration'
      - description: Meeting room settings of a room profile.
      example:
        RoomUtilizationMetricsEnabled: ""
        InstantBooking:
          DurationInMinutes: ""
          Enabled: ""
        RequireCheckIn:
          Enabled: ""
          ReleaseAfterMinutes: ""
        ProactiveJoin:
          EnabledByMotion: true
        EndOfMeetingReminder:
          Enabled: ""
          ReminderType: ""
          ReminderAtMinutes: ""
    MeetingRoomConfiguration_EndOfMeetingReminder:
      allOf:
      - $ref: '#/components/schemas/EndOfMeetingReminder'
      - description: 'Settings for the end of meeting reminder feature that are applied
          to a room profile. The end of meeting reminder enables Alexa to remind users
          when a meeting is ending. '
      example:
        Enabled: ""
        ReminderType: ""
        ReminderAtMinutes: ""
    MeetingRoomConfiguration_InstantBooking:
      allOf:
      - $ref: '#/components/schemas/InstantBooking'
      - description: 'Settings to automatically book the room if available for a configured
          duration when joining a meeting with Alexa. '
      example:
        DurationInMinutes: ""
        Enabled: ""
    MeetingRoomConfiguration_RequireCheckIn:
      allOf:
      - $ref: '#/components/schemas/RequireCheckIn'
      - description: "Settings for requiring a check in when a room is reserved. Alexa\
          \ can cancel a room reservation if it's not checked into. This makes the\
          \ room available for others. Users can check in by joining the meeting with\
          \ Alexa or an AVS device, or by saying “Alexa, check in.” "
      example:
        Enabled: ""
        ReleaseAfterMinutes: ""
    SkillDetails_DeveloperInfo:
      allOf:
      - $ref: '#/components/schemas/DeveloperInfo'
      - description: The details about the developer that published the skill.
    SkillsStoreSkill_SkillDetails:
      allOf:
      - $ref: '#/components/schemas/SkillDetails'
      - description: Information about the skill.
    UpdateMeetingRoomConfiguration_EndOfMeetingReminder:
      allOf:
      - $ref: '#/components/schemas/UpdateEndOfMeetingReminder'
      - description: 'Settings for the end of meeting reminder feature that are applied
          to a room profile. The end of meeting reminder enables Alexa to remind users
          when a meeting is ending. '
      example:
        Enabled: ""
        ReminderType: ""
        ReminderAtMinutes: ""
    UpdateMeetingRoomConfiguration_InstantBooking:
      allOf:
      - $ref: '#/components/schemas/UpdateInstantBooking'
      - description: Settings to automatically book an available room available for
          a configured duration when joining a meeting with Alexa.
      example:
        DurationInMinutes: ""
        Enabled: ""
    UpdateMeetingRoomConfiguration_RequireCheckIn:
      allOf:
      - $ref: '#/components/schemas/UpdateRequireCheckIn'
      - description: "Settings for requiring a check in when a room is reserved. Alexa\
          \ can cancel a room reservation if it's not checked into to make the room\
          \ available for others. Users can check in by joining the meeting with Alexa\
          \ or an AVS device, or by saying “Alexa, check in.” "
      example:
        Enabled: ""
        ReleaseAfterMinutes: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

